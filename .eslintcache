[{"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/index.js":"1","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/serviceWorker.js":"2","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/store.js":"3","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/App.js":"4","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/reducers/application.js":"5","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Footer/Footer.js":"6","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/index.js":"7","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/actions/application.js":"8","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/Header.js":"9","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Header.js":"10","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Header.js":"11","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/axios.js":"12","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/verifyToken.js":"13","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Main.js":"14","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Main.js":"15","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Loading/DashboardSkeleton/index.js":"16","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.react.js":"17","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Loading/Loader.jsx":"18","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/index.js":"19","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/registerAdmin.js":"20","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.min.js":"21","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/Burger.js":"22","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/RightNav.js":"23","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/index.js":"24","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/PpdbOut.js":"25","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Login.js":"26","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Home/HomePpdb.js":"27","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/NotFound/404NotFound.js":"28","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Main/Contact/Contact.js":"29","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Main/Home/Home.js":"30","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Button/Button.js":"31","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Textfield/Textfield.js":"32","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/AdminPage/AddAdmin.js":"33","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/AdminPage/Dashboard.js":"34","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegistrantTable.js":"35","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegistrantCard.js":"36","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegsitrantVerify.js":"37","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegistrantSuccess.js":"38","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Main/Header/Header.js":"39","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormBiodata.js":"40","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormSchoolGrade.js":"41","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormSchool.js":"42","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormStart.js":"43"},{"size":498,"mtime":1614416212075,"results":"44","hashOfConfig":"45"},{"size":5086,"mtime":1613282463883,"results":"46","hashOfConfig":"45"},{"size":264,"mtime":1613282463883,"results":"47","hashOfConfig":"45"},{"size":3503,"mtime":1614505907914,"results":"48","hashOfConfig":"45"},{"size":689,"mtime":1613282463879,"results":"49","hashOfConfig":"45"},{"size":457,"mtime":1613282463879,"results":"50","hashOfConfig":"45"},{"size":58,"mtime":1613282463879,"results":"51","hashOfConfig":"45"},{"size":617,"mtime":1613282463863,"results":"52","hashOfConfig":"45"},{"size":1692,"mtime":1613344555612,"results":"53","hashOfConfig":"45"},{"size":1804,"mtime":1613282463879,"results":"54","hashOfConfig":"45"},{"size":1804,"mtime":1613282463879,"results":"55","hashOfConfig":"45"},{"size":610,"mtime":1613282463879,"results":"56","hashOfConfig":"45"},{"size":413,"mtime":1613282463879,"results":"57","hashOfConfig":"45"},{"size":3059,"mtime":1613282463879,"results":"58","hashOfConfig":"45"},{"size":3271,"mtime":1613282463879,"results":"59","hashOfConfig":"45"},{"size":2350,"mtime":1613282463879,"results":"60","hashOfConfig":"45"},{"size":1720,"mtime":1613282463867,"results":"61","hashOfConfig":"45"},{"size":613,"mtime":1613282463879,"results":"62","hashOfConfig":"45"},{"size":33,"mtime":1613282463879,"results":"63","hashOfConfig":"45"},{"size":377,"mtime":1613282463879,"results":"64","hashOfConfig":"45"},{"size":459239,"mtime":1613282463867,"results":"65","hashOfConfig":"45"},{"size":1236,"mtime":1613282463879,"results":"66","hashOfConfig":"45"},{"size":1431,"mtime":1613282463879,"results":"67","hashOfConfig":"45"},{"size":1340,"mtime":1614494225213,"results":"68","hashOfConfig":"45"},{"size":15093,"mtime":1614506882335,"results":"69","hashOfConfig":"45"},{"size":11427,"mtime":1614419085438,"results":"70","hashOfConfig":"45"},{"size":6943,"mtime":1614494415232,"results":"71","hashOfConfig":"45"},{"size":345,"mtime":1613282463883,"results":"72","hashOfConfig":"45"},{"size":145,"mtime":1613282463883,"results":"73","hashOfConfig":"45"},{"size":15280,"mtime":1613282463883,"results":"74","hashOfConfig":"45"},{"size":1176,"mtime":1614420808648,"results":"75","hashOfConfig":"45"},{"size":2290,"mtime":1614419752077,"results":"76","hashOfConfig":"45"},{"size":7638,"mtime":1614420574706,"results":"77","hashOfConfig":"45"},{"size":10974,"mtime":1614420409654,"results":"78","hashOfConfig":"45"},{"size":8465,"mtime":1614420629354,"results":"79","hashOfConfig":"45"},{"size":8927,"mtime":1614420589347,"results":"80","hashOfConfig":"45"},{"size":14816,"mtime":1614420642757,"results":"81","hashOfConfig":"45"},{"size":26500,"mtime":1614420662063,"results":"82","hashOfConfig":"45"},{"size":675,"mtime":1613282463883,"results":"83","hashOfConfig":"45"},{"size":13923,"mtime":1614509135006,"results":"84","hashOfConfig":"45"},{"size":0,"mtime":1614422735533,"results":"85","hashOfConfig":"45"},{"size":0,"mtime":1614422722548,"results":"86","hashOfConfig":"45"},{"size":3800,"mtime":1614496265523,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"u8z9mu",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"91"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"91"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"91"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"91"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"91"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"91"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"91"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/index.js",["192"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-loadingmask/dist/react-loadingmask.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n",["193","194"],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/serviceWorker.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/store.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/App.js",["195","196","197"],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/reducers/application.js",["198"],"import { SET_DASH } from \"../actions/application\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  users: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  console.log(type);\r\n  switch (type) {\r\n    case \"SHOW_LOADER\":\r\n      return { ...state, loading: true };\r\n\r\n    case \"HIDE_LOADER\":\r\n      return { ...state, loading: false };\r\n\r\n    case SET_DASH:\r\n      return payload;\r\n\r\n    case \"GET_USER\":\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n        loading: false,\r\n      };\r\n    case \"ERROR_USER\":\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Footer/Footer.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/index.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/actions/application.js",["199"],"import { axiosReportsUsers } from \"../modules/helpers\";\r\nimport axios from \"axios\";\r\n\r\nexport const SET_DASH = \"SET_DASH\";\r\n\r\nexport const fetchDash = (id) => (dispatch) => {\r\n  return axiosReportsUsers()\r\n    .get(`ppdb/id/${id}`)\r\n    .then((result) => {\r\n      dispatch(setDash(result.data.data));\r\n    });\r\n};\r\n\r\nexport const setDash = (payload) => {\r\n  return {\r\n    type: SET_DASH,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const showLoader = () => (dispatch) => {\r\n  dispatch({\r\n    type: \"SHOW_LOADER\",\r\n  });\r\n};\r\n\r\nexport const hideLoader = () => (dispatch) => {\r\n  dispatch({\r\n    type: \"HIDE_LOADER\",\r\n  });\r\n};\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/Header.js",["200"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Burger from \"./Burger\";\r\n\r\nimport ImageLogo from \"../../../assets/img/logo192.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 70,\r\n  },\r\n  appBarPos: {\r\n    position: \"fixed\",\r\n    zIndex: theme.zIndex.appBar - 50,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"#000000\",\r\n    \"&:hover\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  logo: {\r\n    maxWidth: 40,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appBarPos} position=\"sticky\" color=\"default\">\r\n        <Toolbar>\r\n          <img src={ImageLogo} className={classes.logo} alt=\"Logo\" />\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            component={Link}\r\n            to={\"/\"}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            SMKN 1 Nawangan\r\n          </Typography>\r\n          {/* <Button\r\n            component={Link}\r\n            to=\"/login\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n          >\r\n            Panitia\r\n          </Button> */}\r\n          <Burger />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/axios.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/verifyToken.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Main.js",["201","202","203","204","205","206"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SpeakerNotesIcon from \"@material-ui/icons/SpeakerNotes\";\r\nimport AccountProfileIcon from \"@material-ui/icons/AccountCircle\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { verify } from \"../../../modules/helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  bold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState(\"\");\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = (side) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText>Welcome, {verify().fullName}</ListItemText>\r\n        </ListItem>\r\n\r\n        {[\"Pendaftar PPDB 2020\"].map((text, index) => (\r\n          <ListItem button key={text} component={Link} to=\"/regist-table\">\r\n            <ListItemIcon>\r\n              <ViewListIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n          </ListItem>\r\n        ))}\r\n\r\n        {[\"Tambah Admin Baru\"].map((text, index) => (\r\n          <ListItem button key={text} component={Link} to=\"/add-admin\">\r\n            <ListItemIcon>\r\n              <PersonAddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        onClick={toggleDrawer(\"left\", true)}\r\n        id=\"Menu-User\"\r\n        edge=\"start\"\r\n        className={classes.menuButton}\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        open={state.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n        onOpen={toggleDrawer(\"left\", true)}\r\n      >\r\n        {sideList(\"left\")}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Main.js",["207"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport { verify } from \"../../../modules/helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  bold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = (side) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText>Welcome, {verify().fullName}</ListItemText>\r\n        </ListItem>\r\n\r\n        {[\"Pendaftar PPDB 2020\"].map((text, index) => (\r\n          <ListItem button key={text} component={Link} to=\"/regist-table\">\r\n            <ListItemIcon>\r\n              <ViewListIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n          </ListItem>\r\n        ))}\r\n\r\n        <Divider />\r\n\r\n        {[\"Verifikasi Sukses\"].map((text, index) => (\r\n          <ListItem button key={text} component={Link} to=\"/regist-success\">\r\n            <ListItemIcon>\r\n              <DoneAllIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n          </ListItem>\r\n        ))}\r\n\r\n        {[\"Verifikasi Gagal\"].map((text, index) => (\r\n          <ListItem button key={text} component={Link} to=\"/regist-table\">\r\n            <ListItemIcon>\r\n              <CancelIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        onClick={toggleDrawer(\"left\", true)}\r\n        id=\"Menu-User\"\r\n        edge=\"start\"\r\n        className={classes.menuButton}\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        open={state.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n        onOpen={toggleDrawer(\"left\", true)}\r\n      >\r\n        {sideList(\"left\")}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Loading/DashboardSkeleton/index.js",["208","209"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  rootCard: {\r\n      minWidth: 275,\r\n  },\r\n  paper: {\r\n    marginTop: 10,\r\n    padding: theme.spacing(1),\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    marginTop: 5,\r\n  },\r\n  chartPart: {\r\n      marginTop: 20,\r\n  },\r\n}));\r\n\r\nfunction Media(props) {\r\n  const { loading = false } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <div className={classes.paper}>\r\n              <Box key={1} width=\"100%\" marginRight={0.5}>\r\n                <Skeleton variant=\"rect\" height={118} />\r\n                <Box pt={0.5}>\r\n                  <Skeleton />\r\n                </Box>\r\n              </Box>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <div className={classes.paper}>\r\n              <Box key={2} width=\"100%\" marginRight={0.5}>\r\n                <Skeleton variant=\"rect\" height={118} />\r\n                <Box pt={0.5}>\r\n                  <Skeleton />\r\n                </Box>\r\n              </Box>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <div className={classes.paper}>\r\n              <Box key={3} width=\"100%\" marginRight={0.5}>\r\n                <Skeleton variant=\"rect\" width=\"100%\" height={118} />\r\n                <Box pt={0.5}>\r\n                  <Skeleton />\r\n                </Box>\r\n              </Box>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <div className={classes.paper}>\r\n              <Box key={4} width=\"100%\" marginRight={0.5}>\r\n                <Skeleton variant=\"rect\" width=\"100%\" height={118} />\r\n                <Box pt={0.5}>\r\n                  <Skeleton />\r\n                </Box>\r\n              </Box>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nMedia.propTypes = {\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default function YouTube() {\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Media loading />\r\n    </Box>\r\n  );\r\n}","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.react.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Loading/Loader.jsx",["210"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoaderGif from '../../assets/img/loading.gif'\r\n\r\nclass Loader extends Component {\r\n    state = {}\r\n\r\n    render() {\r\n        const { loading } = this.props;\r\n\r\n        if (!loading) return null\r\n\r\n        return (\r\n            <div class=\"loader-container\">\r\n                <div className=\"loader\">\r\n                    <img src={LoaderGif} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ loading: state.loading })\r\n\r\nexport default connect(mapStateToProps)(Loader)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/index.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/registerAdmin.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.min.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/Burger.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/RightNav.js",["211"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledRightNav = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n\n  .typo-li {\n    padding: 15px 18px;\n    margin-bottom: -10px;\n    margin-top: 7px;\n    text-decoration: none;\n    color: #000000;\n  }\n\n  .typo-li:hover {\n    color: #42b983;\n  }\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    background-color: #0d2538;\n    position: fixed;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(100%)\")};\n    top: 0;\n    right: 0;\n    height: 100vh;\n    width: 300px;\n    padding-top: 3.5rem;\n    transition: transform 0.3s ease-in-out;\n    z-index: 10;\n\n    .typo-li {\n      text-decoration: none;\n      color: #fff;\n    }\n\n    .typo-li:hover {\n      color: #42b983;\n    }\n  }\n`;\n\nconst RightNav = ({ open }) => {\n  return (\n    <StyledRightNav open={open}>\n      <Typography className=\"typo-li\" component={Link} to={\"/about\"}>\n        Tentang Kami\n      </Typography>\n      <Typography className=\"typo-li\" component={Link} to={\"/contact\"}>\n        Contact Center\n      </Typography>\n      <Typography className=\"typo-li\" component={Link} to={\"/ppdb\"}>\n        PPDB 2021\n      </Typography>\n    </StyledRightNav>\n  );\n};\n\nexport default RightNav;\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/index.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/PpdbOut.js",["212","213","214","215","216","217","218","219","220","221"],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Login.js",["222"],"import React, { useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport OutTextField from \"../../../components/Textfield/Textfield\";\r\nimport OutButton from \"../../../components/Button/Button\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nimport { Link as LinkRouter, withRouter } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#42b983\",\r\n    margin: theme.spacing(1),\r\n  },\r\n  cardLogin: {\r\n    border: \"1px solid\",\r\n    borderColor: \"#aba8a7\",\r\n    borderRadius: \"10px\",\r\n    minWidth: \"150px\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#42b983\",\r\n      color: \"#42b983\",\r\n    },\r\n  },\r\n  textFieldLabel: {\r\n    \"&.Mui-focused\": {\r\n      color: \"#42b983\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n  const [isPendaftar, setIsPendaftar] = React.useState(true);\r\n  const [compPendaftar, setCompPendaftar] = React.useState({\r\n    backgroundColor: \"#42b983\",\r\n    color: \"white\",\r\n  });\r\n  const [compPanitia, setCompPanitia] = React.useState({\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n  });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const initIsPendaftar = (type) => {\r\n    switch (type) {\r\n      case \"pendaftar\":\r\n        setIsPendaftar(true);\r\n        setCompPendaftar({ backgroundColor: \"#42b983\", color: \"white\" });\r\n        setCompPanitia({ backgroundColor: \"white\", color: \"black\" });\r\n        break;\r\n      case \"panitia\":\r\n        setIsPendaftar(false);\r\n        setCompPendaftar({ backgroundColor: \"white\", color: \"black\" });\r\n        setCompPanitia({ backgroundColor: \"#42b983\", color: \"white\" });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const disableBtnProps = {};\r\n  let urlLoginLive = process.env.REACT_APP_API_LOGIN_LIVE;\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Box display=\"flex\">\r\n          <div\r\n            style={compPendaftar}\r\n            className={classes.cardLogin}\r\n            onClick={() => initIsPendaftar(\"pendaftar\")}\r\n          >\r\n            <Grid\r\n              container\r\n              style={{ flexFlow: \"column nowrap\" }}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Avatar className={classes.avatar}>\r\n                {isPendaftar === true ? <CheckIcon /> : <AccountCircleIcon />}\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Pendaftar\r\n              </Typography>\r\n              <Box p={0.5} />\r\n            </Grid>\r\n          </div>\r\n          <Box p={1} />\r\n          <div\r\n            style={compPanitia}\r\n            className={classes.cardLogin}\r\n            onClick={() => initIsPendaftar(\"panitia\")}\r\n          >\r\n            <Grid\r\n              container\r\n              style={{ flexFlow: \"column nowrap\" }}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Avatar className={classes.avatar}>\r\n                {isPendaftar !== true ? <CheckIcon /> : <AssignmentIndIcon />}\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Panitia\r\n              </Typography>\r\n              <Box p={0.5} />\r\n            </Grid>\r\n          </div>\r\n        </Box>\r\n        <Formik\r\n          initialValues={{\r\n            username: \"\",\r\n            password: \"\",\r\n          }}\r\n          validate=\"\"\r\n          onSubmit={(values) => {\r\n            console.log(\"values login\", values);\r\n            if (values.username === \"\" || values.password === \"\") {\r\n              disableBtnProps.disabled = false;\r\n              swal\r\n                .fire({\r\n                  icon: \"error\",\r\n                  title: \"Isikan data anda dengan benar saat login!\",\r\n                })\r\n                .then((result) => {\r\n                  disableBtnProps.disabled = false;\r\n                });\r\n            } else {\r\n              let timerInterval;\r\n              swal\r\n                .fire({\r\n                  title: \"Silahkan tunggu..\",\r\n                  timer: 9999999,\r\n                  timerProgressBar: true,\r\n                  onBeforeOpen: () => {\r\n                    swal.showLoading();\r\n                    timerInterval = setInterval(() => {\r\n                      const content = swal.getContent();\r\n                      if (content) {\r\n                        const b = content.querySelector(\"b\");\r\n                        if (b) {\r\n                          b.textContent = swal.getTimerLeft();\r\n                        }\r\n                      }\r\n                    }, 100);\r\n                  },\r\n                  onClose: () => {\r\n                    clearInterval(timerInterval);\r\n                  },\r\n                })\r\n                .then((result) => {\r\n                  if (result.dismiss === swal.DismissReason.timer) {\r\n                    console.log(\"I was closed by the timer\");\r\n                  }\r\n                });\r\n              axios\r\n                .post(`${urlLoginLive}admin/login`, values)\r\n                .then((response) => {\r\n                  if (response.data.message === \"username not registered!\") {\r\n                    disableBtnProps.disabled = false;\r\n                    swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Username tidak terdaftar\",\r\n                    });\r\n                  } else if (response.data.message === \"Password is wrong!\") {\r\n                    swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Password salah, silahkan coba kembali\",\r\n                    });\r\n                  } else {\r\n                    if (response.data.message === \"Login successfull\") {\r\n                      swal\r\n                        .fire({\r\n                          icon: \"success\",\r\n                          title: \"Login Berhasil\",\r\n                        })\r\n                        .then((result) => {\r\n                          localStorage.setItem(\r\n                            \"token\",\r\n                            JSON.stringify(response.data.data.token)\r\n                          );\r\n                          props.history.push(\"/\");\r\n                          window.location.reload();\r\n                        });\r\n                    }\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  if (error === \"Error: Network Error\") {\r\n                    swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Login gagal, silahkan cek koneksi anda\",\r\n                    });\r\n                  } else {\r\n                    swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"Login gagal, silahkan coba kembali\",\r\n                    });\r\n                  }\r\n                });\r\n            }\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n          }) => (\r\n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n              <form className={classes.form} noValidate>\r\n                <OutTextField\r\n                  id=\"username\"\r\n                  autoComplete=\"username\"\r\n                  type=\"outlined\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  required={true}\r\n                  defaultValue={values.username}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                />\r\n                {isPendaftar ? (\r\n                  <OutTextField\r\n                    id=\"pin\"\r\n                    autoComplete=\"pin\"\r\n                    type=\"outlined\"\r\n                    label=\"PIN\"\r\n                    name=\"pin\"\r\n                    inputType=\"password\"\r\n                    required={true}\r\n                    inputProps={{ maxLength: 6 }}\r\n                    defaultValue={values.pin}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                ) : (\r\n                  <OutTextField\r\n                    id=\"password\"\r\n                    autoComplete=\"password\"\r\n                    type=\"outlined\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    inputType=\"password\"\r\n                    required={true}\r\n                    inputProps={{ maxLength: 10 }}\r\n                    defaultValue={values.pin}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  // <TextField\r\n                  //   className={classes.textField}\r\n                  //   variant=\"outlined\"\r\n                  //   margin=\"normal\"\r\n                  //   required\r\n                  //   fullWidth\r\n                  //   name=\"password\"\r\n                  //   label=\"Password\"\r\n                  //   type=\"password\"\r\n                  //   id=\"password\"\r\n                  //   autoComplete=\"current-password\"\r\n                  //   defaultValue={values.password}\r\n                  //   onChange={handleChange}\r\n                  //   onBlur={handleBlur}\r\n                  //   InputLabelProps={{\r\n                  //     classes: {\r\n                  //       root: classes.textFieldLabel,\r\n                  //     },\r\n                  //   }}\r\n                  // />\r\n                )}\r\n              </form>\r\n              <Box marginTop={1.5}>\r\n                <OutButton\r\n                  label=\"Login\"\r\n                  variant=\"contained\"\r\n                  backgroundColor=\"#42b983\"\r\n                  type=\"submit\"\r\n                  fullWidth={true}\r\n                />\r\n              </Box>\r\n              <Box marginTop={1}>\r\n                <OutButton\r\n                  label=\"Kembali\"\r\n                  variant=\"contained\"\r\n                  backgroundColor=\"#0d2538\"\r\n                  fullWidth={true}\r\n                  component={LinkRouter}\r\n                  to=\"/ppdb\"\r\n                />\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n        <Grid container justify=\"flex-end\">\r\n          <Typography variant=\"body2\">Lupa password? Ganti</Typography>\r\n        </Grid>\r\n      </div>\r\n      <Box mt={8}></Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(SignIn);\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Home/HomePpdb.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/NotFound/404NotFound.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Main/Contact/Contact.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Main/Home/Home.js",["223","224","225","226","227"],"import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Badge as BadgeMaterial,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport { Carousel, Badge, Image, Row, Container, Col } from \"react-bootstrap\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\n\nimport ImageOne from \"../../../../assets/img/smk-slider-1.jpg\";\nimport ImageTwo from \"../../../../assets/img/smk-slider-2.jpg\";\nimport ImageThree from \"../../../../assets/img/smk-slider-3.jpg\";\nimport ImageAdOne from \"../../../../assets/img/adiwiyata-1.jpg\";\nimport ImageAdTwo from \"../../../../assets/img/adiwiyata-2.png\";\nimport ImageAdThree from \"../../../../assets/img/go-green-2.png\";\nimport ImageAdFour from \"../../../../assets/img/lingkungan-hidup-1.png\";\nimport ImageAdFive from \"../../../../assets/img/eco-masjid-1.png\";\nimport ImageAdSix from \"../../../../assets/img/lingkungan-hidup-2.png\";\nimport ImageTutOne from \"../../../../assets/img/tut-wuri-1.png\";\n\nimport SvgGoals from \"../../../../assets/svg/goals-1.svg\";\nimport SvgAkuntansi from \"../../../../assets/svg/jurusan-akuntansi.svg\";\nimport SvgOtomotif from \"../../../../assets/svg/jurusan-otomotif.svg\";\nimport SvgPertanian from \"../../../../assets/svg/jurusan-kria-kayu.svg\";\nimport SvgKriaKayu from \"../../../../assets/svg/jurusan-pertanian.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paper: {\n      padding: theme.spacing(2),\n    },\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  container: {\n    flexGrow: 1,\n  },\n  gridMargin: {\n    marginTop: 20,\n  },\n  gridDate: {\n    marginRight: 5,\n    marginTop: 20,\n    backgroundColor: \"#42b983\",\n  },\n  boldTypographyH4: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  boldTypographyH5: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"#42b983\",\n  },\n  svgGoals: {\n    maxHeight: \"400px\",\n    maxWidth: \"100%\",\n    textAlign: \"right\",\n  },\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  const [timeNow, setTimeNow] = React.useState(\"\");\n  const [dateNow, setDateNow] = React.useState(\"\");\n\n  useEffect(() => {\n    let myVar = setInterval(myTimer, 1000);\n\n    return () => {\n      clearInterval(myVar);\n    };\n  }, []);\n\n  const myTimer = (event) => {\n    let hoursNow = new Date().getHours();\n    let hoursNowZ = hoursNow <= 9 ? `0` + hoursNow : hoursNow;\n    let minutesNow = new Date().getMinutes();\n    let minutesNowZ = minutesNow <= 9 ? `0` + minutesNow : minutesNow;\n    let secondsNow = new Date().getSeconds();\n    let secondsNowZ = secondsNow <= 9 ? `0` + secondsNow : secondsNow;\n    let fullTimeNow = `${hoursNowZ}:${minutesNowZ}:${secondsNowZ}`;\n    setTimeNow(fullTimeNow);\n\n    let createdAtFullyear = new Date().getFullYear();\n    let createdAtMonth = new Date().getMonth() + 1;\n    let createdAtMonthZ =\n      createdAtMonth <= 9 ? `0` + createdAtMonth : createdAtMonth;\n    let createdAtDay = new Date().getDate();\n    let createdAtDayZ = createdAtDay <= 9 ? `0` + createdAtDay : createdAtDay;\n    let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}`;\n    setDateNow(fullDateCreated);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid container justify=\"flex-end\" item xs={12}>\n          <Badge className={classes.gridDate} variant=\"secondary\">\n            <BadgeMaterial variant=\"dot\">\n              <AccessTimeIcon />\n            </BadgeMaterial>\n            <BadgeMaterial variant=\"dot\">\n              <Typography>{timeNow === \"\" ? \"Memuat..\" : timeNow}</Typography>\n            </BadgeMaterial>\n          </Badge>\n          <Badge className={classes.gridDate} variant=\"secondary\">\n            <BadgeMaterial variant=\"dot\">\n              <TodayIcon />\n            </BadgeMaterial>\n            <BadgeMaterial variant=\"dot\">\n              <Typography>{dateNow === \"\" ? \"Memuat..\" : dateNow}</Typography>\n            </BadgeMaterial>\n          </Badge>\n        </Grid>\n        <Grid item xs={12}>\n          <Carousel className={classes.gridMargin}>\n            <Carousel.Item>\n              <img\n                src={ImageOne}\n                className=\"d-block w-100\"\n                alt=\"First slide\"\n                height=\"550\"\n              />\n              <Carousel.Caption>\n                <p>\n                  <h3>First slide label</h3>\n                  Nulla vitae elit libero, a pharetra augue mollis interdum.\n                </p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src={ImageTwo}\n                alt=\"Second slide\"\n                height=\"550\"\n              />\n\n              <Carousel.Caption>\n                <h3>Second slide label</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src={ImageThree}\n                alt=\"Third slide\"\n                height=\"550\"\n              />\n\n              <Carousel.Caption>\n                <h3>Third slide label</h3>\n                <p>\n                  Praesent commodo cursus magna, vel scelerisque nisl\n                  consectetur.\n                </p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n        </Grid>\n        <Grid container justify=\"center\" spacing={0}>\n          <div\n            style={{\n              flexFlow: \"column nowrap\",\n              marginTop: 40,\n              marginBottom: 60,\n            }}\n          >\n            <Grid item xs={12}>\n              <Typography className={classes.boldTypographyH4} variant=\"h3\">\n                SMK Negeri 1 Nawangan\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography\n                color=\"textPrimary\"\n                className={classes.boldTypographyH5}\n                variant=\"h4\"\n              >\n                Leading Go Green School\n              </Typography>\n            </Grid>\n          </div>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <div className={classes.gridMargin}>\n            <img\n              style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n              src={ImageTutOne}\n              alt=\"First slide\"\n            />\n          </div>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <div className={classes.gridMargin}>\n            <img\n              style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n              src={ImageAdOne}\n              alt=\"First slide\"\n            />\n          </div>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <div className={classes.gridMargin}>\n            <img\n              style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n              src={ImageAdTwo}\n              alt=\"First slide\"\n            />\n          </div>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <div className={classes.gridMargin}>\n            <img\n              style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n              src={ImageAdThree}\n              alt=\"First slide\"\n            />\n          </div>\n        </Grid>\n        <Grid container justify=\"center\" spacing={0}>\n          <Grid item xs={6} sm={3}>\n            <div className={classes.gridMargin}>\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                src={ImageAdSix}\n                alt=\"First slide\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            <div className={classes.gridMargin}>\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                src={ImageAdFive}\n                alt=\"First slide\"\n              />\n            </div>\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            <div className={classes.gridMargin}>\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                src={ImageAdFour}\n                alt=\"First slide\"\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\" spacing={0}>\n          <div\n            style={{\n              marginTop: 80,\n              marginBottom: 10,\n            }}\n          >\n            <Grid item xs={12}>\n              <Typography\n                color=\"textPrimary\"\n                className={classes.boldTypographyH5}\n                variant=\"h4\"\n              >\n                Visi & Misi\n              </Typography>\n              <Badge className={classes.gridDate} variant=\"secondary\">\n                <BadgeMaterial variant=\"dot\">\n                  <EcoIcon />\n                </BadgeMaterial>\n                <BadgeMaterial variant=\"dot\">\n                  <Typography>Eco Green School</Typography>\n                </BadgeMaterial>\n              </Badge>\n            </Grid>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <div className={classes.gridMargin}>\n            <img\n              className={classes.svgGoals}\n              src={SvgGoals}\n              alt=\"First slide\"\n            />\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <div\n            style={{ textAlign: \"left\", padding: 10 }}\n            className={classes.gridMargin}\n          >\n            <Typography style={{ fontWeight: \"bold\" }} variant=\"h6\">\n              Visi\n            </Typography>\n            <Typography>\n              Inilah sekolah menengah di Kabupaten Pacitan yang 21 Desember 2017\n              lalu menerima penghargaan Adiwiyata Tingkat Nasional. Sekolah ini\n              sebelumnya maju ke Adiwiyata Tingkat Kabupaten di tahun 2015.\n              Tahun berikutnya, penghargaan Adiwiyata Tingkat Provinsi pun\n              diraih.\n            </Typography>\n            <Typography\n              style={{ fontWeight: \"bold\", marginTop: 10 }}\n              variant=\"h6\"\n            >\n              Misi\n            </Typography>\n            <Typography>\n              Inilah sekolah menengah di Kabupaten Pacitan yang 21 Desember 2017\n              lalu menerima penghargaan Adiwiyata Tingkat Nasional. Sekolah ini\n              sebelumnya maju ke Adiwiyata Tingkat Kabupaten di tahun 2015.\n              Tahun berikutnya, penghargaan Adiwiyata Tingkat Provinsi pun\n              diraih.\n            </Typography>\n          </div>\n        </Grid>\n        <Grid container justify=\"center\" spacing={0}>\n          <div\n            style={{\n              marginTop: 80,\n              marginBottom: 10,\n            }}\n          >\n            <Grid item xs={12}>\n              <Typography\n                color=\"textPrimary\"\n                className={classes.boldTypographyH5}\n                variant=\"h4\"\n              >\n                Jurusan\n              </Typography>\n              <Badge className={classes.gridDate} variant=\"secondary\">\n                <BadgeMaterial variant=\"dot\">\n                  <EcoIcon />\n                </BadgeMaterial>\n                <BadgeMaterial variant=\"dot\">\n                  <Typography>Eco Green School</Typography>\n                </BadgeMaterial>\n              </Badge>\n            </Grid>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Box p={2}>\n            <div\n              style={{\n                padding: \"5px\",\n                border: \"1px solid\",\n                borderRadius: \"10px\",\n              }}\n              className={classes.gridMargin}\n            >\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                src={SvgAkuntansi}\n                alt=\"First slide\"\n              />\n              <Typography\n                color=\"textPrimary\"\n                className={classes.boldTypographyH5}\n                variant=\"h5\"\n              >\n                Akuntansi\n              </Typography>\n            </div>\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Box p={2}>\n            <div\n              style={{\n                padding: \"5px\",\n                border: \"1px solid\",\n                borderRadius: \"10px\",\n              }}\n              className={classes.gridMargin}\n            >\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                src={SvgAkuntansi}\n                alt=\"First slide\"\n              />\n              <Typography\n                color=\"textPrimary\"\n                className={classes.boldTypographyH5}\n                variant=\"h5\"\n              >\n                Tata Busana\n              </Typography>\n            </div>\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Box p={2}>\n            <div\n              style={{\n                padding: \"5px\",\n                border: \"1px solid\",\n                borderRadius: \"10px\",\n              }}\n              className={classes.gridMargin}\n            >\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                src={SvgOtomotif}\n                alt=\"First slide\"\n              />\n              <Typography\n                color=\"textPrimary\"\n                className={classes.boldTypographyH5}\n                variant=\"h5\"\n              >\n                Otomotif\n              </Typography>\n            </div>\n          </Box>\n        </Grid>\n        <Grid container justify=\"center\">\n          <Grid item xs={12} sm={4}>\n            <Box p={2}>\n              <div\n                style={{\n                  padding: \"5px\",\n                  border: \"1px solid\",\n                  borderRadius: \"10px\",\n                }}\n                className={classes.gridMargin}\n              >\n                <img\n                  style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                  src={SvgPertanian}\n                  alt=\"First slide\"\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  className={classes.boldTypographyH5}\n                  variant=\"h5\"\n                >\n                  Pertanian\n                </Typography>\n              </div>\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Box p={2}>\n              <div\n                style={{\n                  padding: \"5px\",\n                  border: \"1px solid\",\n                  borderRadius: \"10px\",\n                }}\n                className={classes.gridMargin}\n              >\n                <img\n                  style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\n                  src={SvgKriaKayu}\n                  alt=\"First slide\"\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  className={classes.boldTypographyH5}\n                  variant=\"h5\"\n                >\n                  Kria Kayu\n                </Typography>\n              </div>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Button/Button.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Textfield/Textfield.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/AdminPage/AddAdmin.js",["228","229","230","231","232"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link as LinkRouter, withRouter } from \"react-router-dom\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport swal from \"sweetalert2\"\r\n\r\nimport { registerValidation } from \"../../../../../modules/validation\"\r\nimport { axiosReportsUsers } from \"../../../../../modules/helpers\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Admin © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        SMKN 1 Nawangan\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>        \r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Daftar Admin\r\n        </Typography>\r\n        <Formik\r\n        initialValues={{\r\n          fullName: \"\",  \r\n          username: \"\",\r\n          confirmPassword: \"\",\r\n          password: \"\"          \r\n        }}\r\n        validate={registerValidation}\r\n        onSubmit={values => {\r\n            if (values.password != values.confirmPassword) {\r\n                swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Mohon samakan password'\r\n                })\r\n            } else {\r\n                let timerInterval\r\n                swal.fire({\r\n                title: 'Silahkan tunggu..',              \r\n                timer: 9999999,\r\n                timerProgressBar: true,\r\n                onBeforeOpen: () => {\r\n                    swal.showLoading()\r\n                    timerInterval = setInterval(() => {\r\n                    const content = swal.getContent()\r\n                    if (content) {\r\n                        const b = content.querySelector('b')\r\n                        if (b) {\r\n                        b.textContent = swal.getTimerLeft()\r\n                        }\r\n                    }\r\n                    }, 100)\r\n                },\r\n                onClose: () => {\r\n                    clearInterval(timerInterval)\r\n                }\r\n                }).then((result) => {          \r\n                    if (result.dismiss === swal.DismissReason.timer) {\r\n                        console.log('I was closed by the timer')\r\n                    }\r\n                }) \r\n                axiosReportsUsers()\r\n                .post(`admin`, {fullName:values.fullName, username:values.username, password:values.password, role:\"admin\"})\r\n                .then(response => {                    \r\n                    swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Pendaftaran admin berhasil'\r\n                    }).then(result => {\r\n                      document.getElementById('fullName').value = \"\"\r\n                      document.getElementById('username').value = \"\"                      \r\n                      document.getElementById('confirmPassword').value = \"\"\r\n                      document.getElementById('password').value = \"\"\r\n                    })\r\n                    \r\n                }).catch(error => {\r\n                    swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Pendaftaran gagal, silahkan coba kembali'\r\n                    })\r\n                })\r\n            }  \r\n        }}\r\n        >\r\n          {({\r\n            values,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={handleSubmit}              \r\n            >\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"fullName\"\r\n            label=\"Nama lengkap\"\r\n            name=\"fullName\"\r\n            autoComplete=\"fullName\"\r\n            autoFocus\r\n            defaultValue={values.fullName}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}            \r\n          />        \r\n          <a style={{color:\"red\", fontStyle:\"italic\"}} >\r\n          <ErrorMessage name=\"fullName\" />          \r\n          </a>              \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            defaultValue={values.username}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n          />\r\n          <a style={{color:\"red\", fontStyle:\"italic\"}} >\r\n            <ErrorMessage name=\"username\" />          \r\n          </a>              \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"confirmPassword\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            autoComplete=\"confirmPassword\"\r\n            defaultValue={values.confirmPassword}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n          />\r\n          <a style={{color:\"red\", fontStyle:\"italic\"}} >\r\n            <ErrorMessage name=\"password\" />          \r\n          </a>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Konfirmasi password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            defaultValue={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n          />                             \r\n        </form>\r\n        <a style={{color:\"red\", fontStyle:\"italic\"}} >\r\n            <ErrorMessage name=\"password\" />          \r\n        </a>\r\n        <Button            \r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}            \r\n          >\r\n            Tambah\r\n          </Button>\r\n          </form>\r\n          )}\r\n        </Formik>\r\n          <Button\r\n           style={{marginTop:\"0px\"}}            \r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n            component={LinkRouter}\r\n            to=\"/\"\r\n          >\r\n            Kembali\r\n          </Button> \r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(SignIn);","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/AdminPage/Dashboard.js",["233","234","235"],"import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux'\r\n\r\nimport CanvasJSReact from '../../../../../assets/chartjs/canvasjs.react';\r\nimport Loader from '../../../../../components/Loading/Loader';\r\nimport Swal from \"sweetalert2\"\r\n\r\nimport { showLoader, hideLoader, getUser } from '../../../../../actions/application';\r\nimport { axiosReportsUsers } from \"../../../../../modules/helpers\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  rootCard: {\r\n      minWidth: 275,\r\n  },\r\n  paper: {\r\n    marginTop: 10,\r\n    padding: theme.spacing(1),\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    marginTop: 5,\r\n  },\r\n  chartPart: {\r\n      marginTop: 20,\r\n  },\r\n}));\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nfunction Dashboard(props) {\r\n  const classes = useStyles();\r\n  const [dateObj, setDateObj] = React.useState([]);\r\n  const [dataDash, setDataDash] = React.useState([]);\r\n  const [dataPerVery, setDataPerVery] = React.useState([]);\r\n  const [dataPerDay, setDataPerDay] = React.useState([]);\r\n  const [isReload, setIsReload] = React.useState(true);\r\n\r\n    useEffect(() => {        \r\n        formatDate();\r\n        props.dispatch(showLoader())\r\n\r\n        axiosReportsUsers()\r\n        .get(`ppdb/count/dash`)\r\n        .then( res => {\r\n            props.dispatch(hideLoader());\r\n            setIsReload(false);\r\n            \r\n            setDataDash(res.data)\r\n            setDataPerVery(res.data.percentReg[0])\r\n            setDataPerDay(res.data.lastTen[0])\r\n        }).catch(error => {\r\n          props.dispatch(hideLoader());\r\n          setIsReload(false);\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Gagal mengambil data, silahkan coba kembali'\r\n          })\r\n        })\r\n\r\n    }, [])\r\n    \r\n  const formatDate = () => {\r\n        var dateWith29 = new Date();\r\n\r\n        function incrementDate(dateInput,increment) {\r\n            var dateFormatTotime = new Date(dateInput);\r\n            var increasedDate = new Date(dateFormatTotime.getTime() +(increment *86400000));\r\n            var d = new Date(increasedDate),\r\n                month = '' + (d.getMonth() + 1),\r\n                day = '' + d.getDate(),\r\n                year = d.getFullYear();\r\n\r\n            if (month.length < 2) \r\n                month = '0' + month;\r\n            if (day.length < 2) \r\n                day = '0' + day;\r\n\r\n            var dateNow = [year, month, day].join('-')\r\n            return dateNow;\r\n        }\r\n\r\n        setDateObj({\r\n            decreaseToday: incrementDate(dateWith29, 0),\r\n            decreaseOneDay: incrementDate(dateWith29, -1),\r\n            decreaseTwoDay: incrementDate(dateWith29, -2),\r\n            decreaseThreeDay: incrementDate(dateWith29, -3),\r\n            decreaseFourDay: incrementDate(dateWith29, -4),\r\n            decreaseFiveDay: incrementDate(dateWith29, -5),\r\n            decreaseSixDay: incrementDate(dateWith29, -6),\r\n            decreaseSevenDay: incrementDate(dateWith29, -7),\r\n            decreaseEightDay: incrementDate(dateWith29, -8),\r\n            decreaseNineDay: incrementDate(dateWith29, -9)\r\n        });\r\n    }\r\n\r\n    const optionsSuccessFail = {\r\n        animationEnabled: true,\r\n        exportFileName: \"Rekap Sukses Dan Gagal\",\r\n        exportEnabled: true,\r\n        title: {\r\n            text: \"Rekap Sukses Dan Gagal\"\r\n        },\r\n        data: [{\t\t\t\t\r\n                type: \"column\",\r\n                dataPoints: [\r\n                    { label: \"Verifikasi Sukses\",  y: dataDash.totVerified },\r\n                    { label: \"Verifikasi Gagal\", y: dataDash.totUnverified },\r\n                ]\r\n        }]\r\n    }\r\n\r\n    const optionsTotal = {\r\n        animationEnabled: true,\r\n        exportFileName: \"Persentase Pendafaftar\",\r\n        exportEnabled: true,\r\n        title:{\r\n            text: \"Persentase Pendaftar\"\r\n        },\r\n        data: [{\r\n            type: \"pie\",\r\n            showInLegend: true,\r\n            legendText: \"{label}\",\r\n            toolTipContent: \"{label}: <strong>{y}%</strong>\",\r\n            indexLabel: \"{y}%\",\r\n            indexLabelPlacement: \"inside\",\r\n            dataPoints: [\r\n                { y: dataPerVery.verify, label: \"Verifikasi Sukses\" },\r\n                { y: dataPerVery.unverify, label: \"Verifikasi Gagal\" },\r\n                { y: dataPerVery.notytVerify, label: \"Belum Terverifikasi\" },\r\n            ]\r\n        }]\r\n    }\r\n\r\n    const optionsPerDay = {\r\n        theme: \"light2\",\r\n        animationEnabled: true,\r\n        exportEnabled: true,\r\n        title: {\r\n            text: \"Jumlah Pendaftar 10 Hari Terakhir\"\r\n        },\r\n        data: [\r\n                {\r\n                    type: \"area\",\r\n                    xValueFormatString: \"DD MMM YYYY\",\r\n                    yValueFormatString: \"#,##0.## Pendaftar\",\r\n                    dataPoints: [\r\n                        { x: new Date(dateObj.decreaseToday), y: dataPerDay.today},\r\n                        { x: new Date(dateObj.decreaseOneDay), y: dataPerDay.decOne},\r\n                        { x: new Date(dateObj.decreaseTwoDay), y: dataPerDay.decTwo},\r\n                        { x: new Date(dateObj.decreaseThreeDay), y: dataPerDay.decThr},\r\n                        { x: new Date(dateObj.decreaseFourDay), y: dataPerDay.decFou},\r\n                        { x: new Date(dateObj.decreaseFiveDay), y: dataPerDay.decFiv},\r\n                        { x: new Date(dateObj.decreaseSixDay), y: dataPerDay.decSix},\r\n                        { x: new Date(dateObj.decreaseSevenDay), y: dataPerDay.decSev},\r\n                        { x: new Date(dateObj.decreaseEightDay), y: dataPerDay.decEig},\r\n                        { x: new Date(dateObj.decreaseNineDay), y: dataPerDay.decNin},\r\n                    ]\r\n                }\r\n        ]\r\n    }\r\n\r\n    if(isReload) \r\n        return (\r\n            <div>\r\n                <Loader />\r\n            </div>\r\n        )\r\n\r\n  return (\r\n      <div>\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                    <div className={classes.paper}>\r\n                        <Card className={classes.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Total Pendaftar\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\r\n                                    {dataDash.length === 0 ? 0 : dataDash.totalAll}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\">Visit</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <div className={classes.paper}>\r\n                        <Card className={classes.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Belum Terverifikasi\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\r\n                                    {dataDash.length === 0 ? 0 : dataDash.totNotYetVer}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\">Visit</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <div className={classes.paper}>\r\n                        <Card className={classes.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Verifikasi Sukses\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\r\n                                    {dataDash.length === 0 ? 0 : dataDash.totVerified}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\">Visit</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <div className={classes.paper}>\r\n                        <Card className={classes.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    Verifikasi Gagal\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\r\n                                    {dataDash.length === 0 ? 0 : dataDash.totUnverified}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\">Visit</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        <div className={classes.chartPart}>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <CanvasJSChart options = {optionsSuccessFail}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <CanvasJSChart options = {optionsTotal}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        <div className={classes.chartPart}>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <CanvasJSChart options = {optionsPerDay}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state =>({ users: state.users})\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegistrantTable.js",["236"],"import React, { useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Swal from \"sweetalert2\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { axiosReportsUsers } from \"../../../../../modules/helpers\";\r\n\r\nconst columns = [\r\n  { id: \"idRegister\", label: \"ID Register\", minWidth: 170 },\r\n  { id: \"fullName\", label: \"Nama Lengkap\", minWidth: 100 },\r\n  {\r\n    id: \"nisn\",\r\n    label: \"NISN\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"fromSchool\",\r\n    label: \"Asal Sekolah\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"facultyFirst\",\r\n    label: \"Jurusan Utama\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"action\",\r\n    label: \"Aksi\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"130px\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [data, setData] = React.useState([]);\r\n  const [timeNow, setTimeNow] = React.useState(\"\");\r\n  const [dateNow, setDateNow] = React.useState(\"\");\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeSearchRegistrant = (event) => {\r\n    axiosReportsUsers()\r\n      .get(`ppdb/search-fullname/?q=${event.target.value}`)\r\n      .then((res) => setData(res.data.data))\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal mengambil data, silahkan coba kembali\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const myTimer = (event) => {\r\n    let hoursNow = new Date().getHours();\r\n    let hoursNowZ = hoursNow <= 9 ? `0` + hoursNow : hoursNow;\r\n    let minutesNow = new Date().getMinutes();\r\n    let minutesNowZ = minutesNow <= 9 ? `0` + minutesNow : minutesNow;\r\n    let secondsNow = new Date().getSeconds();\r\n    let secondsNowZ = secondsNow <= 9 ? `0` + secondsNow : secondsNow;\r\n    let fullTimeNow = `${hoursNowZ}:${minutesNowZ}:${secondsNowZ}`;\r\n    setTimeNow(fullTimeNow);\r\n\r\n    let createdAtFullyear = new Date().getFullYear();\r\n    let createdAtMonth = new Date().getMonth() + 1;\r\n    let createdAtMonthZ =\r\n      createdAtMonth <= 9 ? `0` + createdAtMonth : createdAtMonth;\r\n    let createdAtDay = new Date().getDate();\r\n    let createdAtDayZ = createdAtDay <= 9 ? `0` + createdAtDay : createdAtDay;\r\n    let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}`;\r\n    setDateNow(fullDateCreated);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let myVar = setInterval(myTimer, 1000);\r\n\r\n    axiosReportsUsers()\r\n      .get(`ppdb`)\r\n      .then((res) => setData(res.data.data))\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal mengambil data, silahkan coba kembali\",\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      clearInterval(myVar);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"100px\" }}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          id=\"fullName\"\r\n          label=\"Cari dengan nama..\"\r\n          name=\"fullName\"\r\n          autoComplete=\"fullName\"\r\n          onChange={handleChangeSearchRegistrant}\r\n          style={{ position: \"absolute\", left: \"5px\", top: \"70px\" }}\r\n        />\r\n        <TextField\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"5px\",\r\n            top: \"70px\",\r\n            width: \"108px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          id=\"fullName\"\r\n          size=\"small\"\r\n          value={dateNow}\r\n          disabled\r\n        />\r\n        <TextField\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"5px\",\r\n            top: \"120px\",\r\n            width: \"108px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          id=\"fullName\"\r\n          size=\"small\"\r\n          value={timeNow}\r\n          disabled\r\n        />\r\n      </div>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.idRegister}\r\n                    >\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.id == \"action\" ? (\r\n                              <div>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  size=\"small\"\r\n                                  color=\"secondary\"\r\n                                  style={{\r\n                                    marginTop: \"10px\",\r\n                                    marginRight: \"10px\",\r\n                                  }}\r\n                                  component={Link}\r\n                                  to={`regist-card/${row._id}`}\r\n                                >\r\n                                  Detail\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  size=\"small\"\r\n                                  color=\"primary\"\r\n                                  style={{\r\n                                    marginTop: \"10px\",\r\n                                    marginRight: \"10px\",\r\n                                  }}\r\n                                  component={Link}\r\n                                  to={`regist-verify/${row._id}`}\r\n                                >\r\n                                  Verifikasi\r\n                                </Button>\r\n                              </div>\r\n                            ) : column.format && typeof value === \"number\" ? (\r\n                              column.format(value)\r\n                            ) : (\r\n                              value\r\n                            )}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(StickyHeadTable);\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegistrantCard.js",["237","238"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link as LinkRouter, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactToPdf from \"react-to-pdf\";\r\n\r\nconst ref = React.createRef();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Checkout({ match }) {\r\n  const classes = useStyles();\r\n  const isLogin = localStorage.getItem(\"token\");\r\n  let linkBack = \"\";\r\n\r\n  if (isLogin) {\r\n    linkBack = \"/regist-table\";\r\n  } else {\r\n    linkBack = \"/\";\r\n  }\r\n\r\n  const [idRegister, setIdRegister] = React.useState(\"\");\r\n  const [fullName, setFullName] = React.useState(\"\");\r\n  const [nisn, setNisn] = React.useState(\"\");\r\n  const [bornPlace, setBornPlace] = React.useState(\"\");\r\n  const [dateBorn, setDateBorn] = React.useState(\"\");\r\n  const [fromSchool, setFromSchool] = React.useState(\"\");\r\n  const [firstFaculty, setFirstFaculty] = React.useState(\"\");\r\n  const [secondFaculty, setSecondFaculty] = React.useState(\"\");\r\n  const [createdAt, setCreatedAt] = React.useState(\"\");\r\n\r\n  const id = match.params.id;\r\n  let urlLoginLive = process.env.REACT_APP_API_LOGIN_LIVE;\r\n\r\n  useEffect(() => {\r\n    let timerInterval;\r\n    Swal.fire({\r\n      title: \"Silahkan tunggu..\",\r\n      timer: 9999999,\r\n      timerProgressBar: true,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getContent();\r\n          if (content) {\r\n            const b = content.querySelector(\"b\");\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft();\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      onClose: () => {\r\n        clearInterval(timerInterval);\r\n      },\r\n    }).then((result) => {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log(\"I was closed by the timer\");\r\n      }\r\n    });\r\n    axios\r\n      .get(`${urlLoginLive}ppdb/id/${id}`)\r\n      .then((response) => {\r\n        setFullName({ fullName: response.data.data[0].fullName });\r\n        setIdRegister({ idRegister: response.data.data[0].idRegister });\r\n        setNisn({ nisn: response.data.data[0].nisn });\r\n        setBornPlace({ bornPlace: response.data.data[0].bornPlace });\r\n        setDateBorn({ dateBorn: response.data.data[0].dateBorn });\r\n        setFromSchool({ fromSchool: response.data.data[0].fromSchool });\r\n        setFirstFaculty({ firstFaculty: response.data.data[0].facultyFirst });\r\n        setSecondFaculty({\r\n          secondFaculty: response.data.data[0].facultySecond,\r\n        });\r\n        setCreatedAt({ createdAt: response.data.data[0].created_at });\r\n\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Sukses mengambil data\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal mengambil data, silahkan coba kembali\",\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  let createdAtFullyear = new Date(createdAt.createdAt).getFullYear();\r\n  let createdAtMonth = new Date(createdAt.createdAt).getMonth() + 1;\r\n  let createdAtMonthZ =\r\n    createdAtMonth <= 9 ? `0` + createdAtMonth : createdAtMonth;\r\n  let createdAtDay = new Date(createdAt.createdAt).getDate();\r\n  let createdAtDayZ = createdAtDay <= 9 ? `0` + createdAtDay : createdAtDay;\r\n  let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}`;\r\n\r\n  return (\r\n    <div id=\"divToPrint\">\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <a ref={ref}>\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" align=\"center\">\r\n                  SMKN 1 Nawangan\r\n                </Typography>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                  PPDB Online 2020\r\n                </Typography>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    ID Peserta\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    {idRegister.idRegister}\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Nama Lengkap\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    {fullName.fullName}\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    NISN\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    {nisn.nisn}\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Tempat Tanggal Lahir\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    {bornPlace.bornPlace}, {dateBorn.dateBorn}\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Asal Sekolah\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    {fromSchool.fromSchool}\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Pilihan Jurusan\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    1. {firstFaculty.firstFaculty}\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    2. {secondFaculty.secondFaculty}\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Tanggal Pendaftaran\r\n                  </Typography>\r\n                  <Typography style={{ marginTop: \"-10px\" }} gutterBottom>\r\n                    {fullDateCreated}\r\n                  </Typography>\r\n                </div>\r\n              </React.Fragment>\r\n            </a>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <ReactToPdf\r\n                targetRef={ref}\r\n                filename=\"Kartu-Peserta.pdf\"\r\n                x={30}\r\n                y={0.5}\r\n              >\r\n                {({ toPdf }) => (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    style={{ marginTop: \"40px\", marginRight: \"5px\" }}\r\n                    onClick={toPdf}\r\n                    component={LinkRouter}\r\n                  >\r\n                    Download pdf\r\n                  </Button>\r\n                )}\r\n              </ReactToPdf>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n                component={LinkRouter}\r\n                to={linkBack}\r\n                style={{ marginTop: \"40px\", marginLeft: \"5px\" }}\r\n              >\r\n                Kembali\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Checkout);\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegsitrantVerify.js",["239","240"],"import React, { useEffect } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\n\r\nimport { CardDeck, Card, Button } from \"react-bootstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { axiosReportsUsers } from \"../../../../../modules/helpers\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction RegsitrantVerify({ match }, props) {\r\n  const classes = useStyles();\r\n  const [btnSuccess, setBtnSuccess] = React.useState();\r\n  const [btnFail, setBtnFail] = React.useState();\r\n  const [btnDisabled, setBtnDisabled] = React.useState();\r\n  const [registrantData, setRegistrantData] = React.useState([]);\r\n  const [verifFull, setVerifFull] = React.useState(\"\");\r\n  const [idRegister, setIdRegister] = React.useState(\"\");\r\n\r\n  const id = match.params.id;\r\n\r\n  const onChangeVerif = (event) => {\r\n    let rdFullNameTrue = document.querySelector(\"input[name=fullnameTrueX]\")\r\n      .checked;\r\n    let rdFullNameFalse = document.querySelector(\"input[name=fullnameFalseX]\")\r\n      .checked;\r\n    let rdNisnTrue = document.querySelector(\"input[name=nisnTrueX]\").checked;\r\n    let rdNisnFalse = document.querySelector(\"input[name=nisnFalseX]\").checked;\r\n    let rdBornTrue = document.querySelector(\"input[name=bornTrueX]\").checked;\r\n    let rdBornFalse = document.querySelector(\"input[name=bornFalseX]\").checked;\r\n    let rdFromSchTrue = document.querySelector(\"input[name=fromSchoolTrueX]\")\r\n      .checked;\r\n    let rdFromSchFalse = document.querySelector(\"input[name=fromSchoolFalseX]\")\r\n      .checked;\r\n\r\n    if (!rdFullNameTrue && !rdFullNameFalse) {\r\n      setBtnSuccess(true);\r\n      setBtnFail(true);\r\n    } else if (!rdNisnTrue && !rdNisnFalse) {\r\n      setBtnSuccess(true);\r\n      setBtnFail(true);\r\n    } else if (!rdBornTrue && !rdBornFalse) {\r\n      setBtnSuccess(true);\r\n      setBtnFail(true);\r\n    } else if (!rdFromSchTrue && !rdFromSchFalse) {\r\n      setBtnSuccess(true);\r\n      setBtnFail(true);\r\n    } else {\r\n      setBtnDisabled(false);\r\n      if (rdFullNameTrue && rdNisnTrue && rdBornTrue && rdFromSchTrue) {\r\n        setVerifFull({\r\n          registrantData: id,\r\n          resultVerify: \"verified\",\r\n          fullNameVerify: rdFullNameTrue,\r\n          nisnVerify: rdNisnTrue,\r\n          bornPlaceVerify: rdBornTrue,\r\n          dateBornVerify: rdBornTrue,\r\n          fromSchoolVerify: rdFromSchTrue,\r\n          notedVerify: \"verified\",\r\n        });\r\n        setBtnSuccess(false);\r\n        setBtnFail(true);\r\n      } else {\r\n        setVerifFull({\r\n          registrantData: id,\r\n          resultVerify: \"unverified\",\r\n          fullNameVerify: rdFullNameTrue,\r\n          nisnVerify: rdNisnTrue,\r\n          bornPlaceVerify: rdBornTrue,\r\n          dateBornVerify: rdBornTrue,\r\n          fromSchoolVerify: rdFromSchTrue,\r\n        });\r\n        setBtnSuccess(true);\r\n        setBtnFail(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onLoading = () => {\r\n    let timerInterval;\r\n\r\n    Swal.fire({\r\n      title: \"Silahkan tunggu..\",\r\n      timer: 9999999,\r\n      timerProgressBar: true,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getContent();\r\n          if (content) {\r\n            const b = content.querySelector(\"b\");\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft();\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      onClose: () => {\r\n        clearInterval(timerInterval);\r\n      },\r\n    }).then((result) => {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log(\"I was closed by the timer\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let renderChange;\r\n\r\n    setBtnSuccess(true);\r\n    setBtnFail(true);\r\n\r\n    onLoading();\r\n    axiosReportsUsers()\r\n      .get(`ppdb/id/${id}`)\r\n      .then((res) => {\r\n        if (res.data.data[0].checkVerifyBiodata === \"yes\") {\r\n          setRegistrantData(res.data.data[0]);\r\n          setIdRegister(res.data.data[0].idRegister);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Sukses mengambil data\",\r\n          }).then((result) => {\r\n            renderChange = setInterval(onChangeVerif, 500);\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title:\r\n              \"Maaf, tidak bisa verifikasi ulang pendaftar yang sudah terverifikasi\",\r\n          }).then((result) => {\r\n            navigateTo();\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal mengambil data, silahkan coba kembali\",\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      clearInterval(renderChange);\r\n    };\r\n  }, []);\r\n\r\n  const onVerSuccess = () => {\r\n    Swal.fire({\r\n      title: \"Verifikasi berhasil?\",\r\n      text: \"Pastikan semua data pendaftar benar!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Ya, semua data benar!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        onLoading();\r\n\r\n        const postVerify = axiosReportsUsers().post(`verify`, {\r\n          ...verifFull,\r\n          idRegister: idRegister,\r\n        });\r\n        const updateVerify = axiosReportsUsers().put(`ppdb/id/${id}`, {\r\n          checkVerifyBiodata: \"verified\",\r\n        });\r\n\r\n        axiosReportsUsers()\r\n          .all([postVerify, updateVerify])\r\n          .then(\r\n            axiosReportsUsers().spread((...responses) => {\r\n              if (responses[0].status === 200 && responses[1].status === 200) {\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `Verifikasi data atas nama ${registrantData.fullName} telah berhasil!`,\r\n                }).then((result) => {\r\n                  navigateTo();\r\n                });\r\n              } else {\r\n                Swal.fire({\r\n                  icon: \"error\",\r\n                  title: \"Gagal verifikasi data, silahkan coba kembali\",\r\n                });\r\n              }\r\n            })\r\n          )\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Gagal verifikasi data, silahkan coba kembali\",\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const onVerFail = () => {\r\n    console.log(verifFull);\r\n    Swal.fire({\r\n      title: \"Verifikasi gagal?\",\r\n      text:\r\n        \"Verifikasi data pendaftar ini terkonfirmasi gagal, pastikan semua data pendaftar benar!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Ya\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.mixin({\r\n          input: \"text\",\r\n          confirmButtonText: \"Next &rarr;\",\r\n          showCancelButton: true,\r\n          progressSteps: [\"1\"],\r\n        })\r\n          .queue([\r\n            {\r\n              title: \"Catatan verifikasi\",\r\n              text: \"Tambahkan catatan untuk verifikasi gagal ini\",\r\n            },\r\n          ])\r\n          .then((result) => {\r\n            if (result.value) {\r\n              const answer = result.value;\r\n              const dataAnswer = answer.toString();\r\n\r\n              const postVerify = axiosReportsUsers().post(`verify`, {\r\n                ...verifFull,\r\n                idRegister: idRegister,\r\n                notedVerify: dataAnswer,\r\n              });\r\n              const updateVerify = axiosReportsUsers().put(`ppdb/id/${id}`, {\r\n                checkVerifyBiodata: \"unverified\",\r\n              });\r\n\r\n              onLoading();\r\n              axiosReportsUsers()\r\n                .all([postVerify, updateVerify])\r\n                .then(\r\n                  axiosReportsUsers().spread((...responses) => {\r\n                    if (\r\n                      responses[0].status === 200 &&\r\n                      responses[1].status === 200\r\n                    ) {\r\n                      Swal.fire({\r\n                        icon: \"success\",\r\n                        title: `Verifikasi data atas nama ${registrantData.fullName} telah terverifikasi gagal!`,\r\n                      }).then((result) => {\r\n                        navigateTo();\r\n                      });\r\n                    } else {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Gagal verifikasi data, silahkan coba kembali\",\r\n                      });\r\n                    }\r\n                  })\r\n                )\r\n                .catch((error) => {\r\n                  Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Gagal verifikasi data, silahkan coba kembali\",\r\n                  });\r\n                });\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const history = useHistory();\r\n  const navigateTo = () => history.push(\"/regist-table\");\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{ marginTop: \"50px\", marginBottom: \"50px\", textAlign: \"center\" }}\r\n      >\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          Verifikasi Biodata\r\n        </Typography>\r\n      </div>\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Nama lengkap</Card.Title>\r\n            <Card.Text>{registrantData.fullName}</Card.Text>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup row aria-label=\"position\" name=\"position\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio\r\n                      color=\"primary\"\r\n                      value=\"fullnameTrue\"\r\n                      name=\"fullnameTrueX\"\r\n                    />\r\n                  }\r\n                  label=\"Benar\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio\r\n                      color=\"primary\"\r\n                      value=\"fullNameFalse\"\r\n                      name=\"fullnameFalseX\"\r\n                    />\r\n                  }\r\n                  label=\"Salah\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>NISN</Card.Title>\r\n            <Card.Text>{registrantData.nisn}</Card.Text>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup row aria-label=\"position\" name=\"position\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio color=\"primary\" value=\"nisnTrue\" name=\"nisnTrueX\" />\r\n                  }\r\n                  label=\"Benar\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio\r\n                      color=\"primary\"\r\n                      value=\"nisnFalse\"\r\n                      name=\"nisnFalseX\"\r\n                    />\r\n                  }\r\n                  label=\"Salah\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Tempat tanggal lahir</Card.Title>\r\n            <Card.Text>\r\n              {`${registrantData.bornPlace}, ${registrantData.dateBorn}`}\r\n            </Card.Text>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup row aria-label=\"position\" name=\"position\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio color=\"primary\" value=\"bornTrue\" name=\"bornTrueX\" />\r\n                  }\r\n                  label=\"Benar\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio\r\n                      color=\"primary\"\r\n                      value=\"bornFalse\"\r\n                      name=\"bornFalseX\"\r\n                    />\r\n                  }\r\n                  label=\"Salah\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Asal sekolah</Card.Title>\r\n            <Card.Text>{registrantData.fromSchool}</Card.Text>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup row aria-label=\"position\" name=\"position\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio\r\n                      color=\"primary\"\r\n                      value=\"fromSchoolTrue\"\r\n                      name=\"fromSchoolTrueX\"\r\n                    />\r\n                  }\r\n                  label=\"Benar\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Radio\r\n                      color=\"primary\"\r\n                      value=\"fromSchoolFalse\"\r\n                      name=\"fromSchoolFalseX\"\r\n                    />\r\n                  }\r\n                  label=\"Salah\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardDeck>\r\n      <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\r\n        <Button\r\n          variant=\"success\"\r\n          disabled={btnSuccess}\r\n          style={{ marginTop: \"10px\", marginRight: \"10px\" }}\r\n          onClick={onVerSuccess}\r\n        >\r\n          Verifikasi Sukses\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={btnFail}\r\n          style={{ marginTop: \"10px\", marginRight: \"10px\" }}\r\n          onClick={onVerFail}\r\n        >\r\n          Verifikasi Gagal\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          style={{ marginTop: \"10px\", marginRight: \"10px\" }}\r\n          onClick={navigateTo}\r\n        >\r\n          Kembali\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegsitrantVerify);\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Admin/Registrant/RegistrantSuccess.js",["241","242","243"],"import React, { useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Swal from \"sweetalert2\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\n//icons\r\nimport EuroSymbolIcon from \"@material-ui/icons/EuroSymbol\";\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\nimport MotorcycleIcon from \"@material-ui/icons/Motorcycle\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport SpaIcon from \"@material-ui/icons/Spa\";\r\n\r\nimport { axiosReportsUsers } from \"../../../../../modules/helpers\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst columns = [\r\n  { id: \"idRegister\", label: \"ID Register\", minWidth: 170 },\r\n  { id: \"fullName\", label: \"Nama Lengkap\", minWidth: 100 },\r\n  {\r\n    id: \"nisn\",\r\n    label: \"NISN\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"fromSchool\",\r\n    label: \"Asal Sekolah\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"facultyFirst\",\r\n    label: \"Jurusan Utama\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"action\",\r\n    label: \"Aksi\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  rootZ: {\r\n    width: \"100%\",\r\n    marginTop: \"100px\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  rootZX: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: \"100px\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [timeNow, setTimeNow] = React.useState(\"\");\r\n  const [dateNow, setDateNow] = React.useState(\"\");\r\n  const [value, setValue] = React.useState(0);\r\n  const [oldValue, setOldValue] = React.useState(0);\r\n\r\n  //registrant\r\n  const [facultyAkl, setFacultyAkl] = React.useState([]);\r\n  const [facultyAtph, setFacultyAtph] = React.useState([]);\r\n  const [facultyKkkr, setFacultyKkkr] = React.useState([]);\r\n  const [facultyTb, setFacultyTb] = React.useState([]);\r\n  const [facultyTkro, setFacultyTkro] = React.useState([]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    setOldValue(newValue);\r\n  };\r\n\r\n  const handleChangeAll = (event) => {\r\n    if (event.target.value !== \"\") {\r\n      setValue(8);\r\n    } else {\r\n      setValue(oldValue);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  //   const handleChangeSearchRegistrant = (event) => {\r\n  //     axiosReportsUsers()\r\n  //         .get(`ppdb/search-fullname/?q=${event.target.value}`)\r\n  //         .then(\r\n  //           res => setData(res.data.data)\r\n  //         ).catch(error => {\r\n  //           Swal.fire({\r\n  //             icon: 'error',\r\n  //             title: 'Gagal mengambil data, silahkan coba kembali'\r\n  //           })\r\n  //         })\r\n  //   };\r\n\r\n  const myTimer = (event) => {\r\n    let hoursNow = new Date().getHours();\r\n    let hoursNowZ = hoursNow <= 9 ? `0` + hoursNow : hoursNow;\r\n    let minutesNow = new Date().getMinutes();\r\n    let minutesNowZ = minutesNow <= 9 ? `0` + minutesNow : minutesNow;\r\n    let secondsNow = new Date().getSeconds();\r\n    let secondsNowZ = secondsNow <= 9 ? `0` + secondsNow : secondsNow;\r\n    let fullTimeNow = `${hoursNowZ}:${minutesNowZ}:${secondsNowZ}`;\r\n    setTimeNow(fullTimeNow);\r\n\r\n    let createdAtFullyear = new Date().getFullYear();\r\n    let createdAtMonth = new Date().getMonth() + 1;\r\n    let createdAtMonthZ =\r\n      createdAtMonth <= 9 ? `0` + createdAtMonth : createdAtMonth;\r\n    let createdAtDay = new Date().getDate();\r\n    let createdAtDayZ = createdAtDay <= 9 ? `0` + createdAtDay : createdAtDay;\r\n    let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}`;\r\n    setDateNow(fullDateCreated);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let myVar = setInterval(myTimer, 1000);\r\n\r\n    axiosReportsUsers()\r\n      .get(`verify/verified/getall`)\r\n      .then((res) => {\r\n        setFacultyAtph(res.data.facultyAtph);\r\n        setFacultyTb(res.data.facultyTb);\r\n        setFacultyTkro(res.data.facultyTkro);\r\n        setFacultyKkkr(res.data.facultyKkkr);\r\n        setFacultyAkl(res.data.facultyAkl);\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal mengambil data, silahkan coba kembali\",\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      clearInterval(myVar);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"100px\" }}>\r\n        <TextField\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"5px\",\r\n            top: \"80px\",\r\n            width: \"108px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          id=\"fullName\"\r\n          size=\"small\"\r\n          value={dateNow}\r\n          disabled\r\n        />\r\n        <TextField\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"120px\",\r\n            top: \"80px\",\r\n            width: \"108px\",\r\n          }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          id=\"fullName\"\r\n          size=\"small\"\r\n          value={timeNow}\r\n          disabled\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.rootZX}>\r\n        <AppBar position=\"relative\" color=\"default\">\r\n          <Grid container spacing={0}>\r\n            <Toolbar>\r\n              <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                  placeholder=\"Search…\"\r\n                  classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                  }}\r\n                  margin=\"normal\"\r\n                  id=\"searchAll\"\r\n                  name=\"searchAll\"\r\n                  autoComplete=\"searchAll\"\r\n                  onChange={handleChangeAll}\r\n                  inputProps={{ \"aria-label\": \"search\" }}\r\n                />\r\n              </div>\r\n            </Toolbar>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n              aria-label=\"scrollable auto tabs example\"\r\n            >\r\n              <Tab\r\n                label=\"Akuntansi (AKL)\"\r\n                icon={<EuroSymbolIcon />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                label=\"Tata Busana (TB)\"\r\n                icon={<AccessibilityNewIcon />}\r\n                {...a11yProps(1)}\r\n              />\r\n              <Tab\r\n                label=\"Otomotif (TKRO)\"\r\n                icon={<MotorcycleIcon />}\r\n                {...a11yProps(2)}\r\n              />\r\n              <Tab\r\n                label=\"Pertanian (ATPH)\"\r\n                icon={<EcoIcon />}\r\n                {...a11yProps(3)}\r\n              />\r\n              <Tab\r\n                label=\"Kria Kayu (KKKR)\"\r\n                icon={<SpaIcon />}\r\n                {...a11yProps(4)}\r\n              />\r\n            </Tabs>\r\n          </Grid>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            id=\"fullName\"\r\n            label=\"Cari dengan nama..\"\r\n            name=\"fullName\"\r\n            autoComplete=\"fullName\"\r\n            //   onChange={handleChangeSearchRegistrant}\r\n          />\r\n\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {facultyAkl\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.idRegister}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.id === \"action\" ? (\r\n                                  <div>\r\n                                    <Button\r\n                                      variant=\"contained\"\r\n                                      size=\"small\"\r\n                                      color=\"secondary\"\r\n                                      component={Link}\r\n                                      to={`regist-card/${row._id}`}\r\n                                    >\r\n                                      Detail\r\n                                    </Button>\r\n                                  </div>\r\n                                ) : column.format &&\r\n                                  typeof value === \"number\" ? (\r\n                                  column.format(value)\r\n                                ) : (\r\n                                  value\r\n                                )}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={facultyAkl.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            id=\"fullName\"\r\n            label=\"Cari dengan nama..\"\r\n            name=\"fullName\"\r\n            autoComplete=\"fullName\"\r\n            //   onChange={handleChangeSearchRegistrant}\r\n          />\r\n\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {facultyTb\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.idRegister}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.id === \"action\" ? (\r\n                                  <div>\r\n                                    <Button\r\n                                      variant=\"contained\"\r\n                                      size=\"small\"\r\n                                      color=\"secondary\"\r\n                                      component={Link}\r\n                                      to={`regist-card/${row._id}`}\r\n                                    >\r\n                                      Detail\r\n                                    </Button>\r\n                                  </div>\r\n                                ) : column.format &&\r\n                                  typeof value === \"number\" ? (\r\n                                  column.format(value)\r\n                                ) : (\r\n                                  value\r\n                                )}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={facultyTb.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            id=\"fullName\"\r\n            label=\"Cari dengan nama..\"\r\n            name=\"fullName\"\r\n            autoComplete=\"fullName\"\r\n            //   onChange={handleChangeSearchRegistrant}\r\n          />\r\n\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {facultyTkro\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.idRegister}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.id == \"action\" ? (\r\n                                  <div>\r\n                                    <Button\r\n                                      variant=\"contained\"\r\n                                      size=\"small\"\r\n                                      color=\"secondary\"\r\n                                      component={Link}\r\n                                      to={`regist-card/${row._id}`}\r\n                                    >\r\n                                      Detail\r\n                                    </Button>\r\n                                  </div>\r\n                                ) : column.format &&\r\n                                  typeof value === \"number\" ? (\r\n                                  column.format(value)\r\n                                ) : (\r\n                                  value\r\n                                )}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={facultyTkro.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            id=\"fullName\"\r\n            label=\"Cari dengan nama..\"\r\n            name=\"fullName\"\r\n            autoComplete=\"fullName\"\r\n            //   onChange={handleChangeSearchRegistrant}\r\n          />\r\n\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {facultyAtph\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.idRegister}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.id == \"action\" ? (\r\n                                  <div>\r\n                                    <Button\r\n                                      variant=\"contained\"\r\n                                      size=\"small\"\r\n                                      color=\"secondary\"\r\n                                      component={Link}\r\n                                      to={`regist-card/${row._id}`}\r\n                                    >\r\n                                      Detail\r\n                                    </Button>\r\n                                  </div>\r\n                                ) : column.format &&\r\n                                  typeof value === \"number\" ? (\r\n                                  column.format(value)\r\n                                ) : (\r\n                                  value\r\n                                )}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={facultyAtph.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={4}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            id=\"fullName\"\r\n            label=\"Cari dengan nama..\"\r\n            name=\"fullName\"\r\n            autoComplete=\"fullName\"\r\n            //   onChange={handleChangeSearchRegistrant}\r\n          />\r\n\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {facultyKkkr\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.idRegister}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.id == \"action\" ? (\r\n                                  <div>\r\n                                    <Button\r\n                                      variant=\"contained\"\r\n                                      size=\"small\"\r\n                                      color=\"secondary\"\r\n                                      component={Link}\r\n                                      to={`regist-card/${row._id}`}\r\n                                    >\r\n                                      Detail\r\n                                    </Button>\r\n                                  </div>\r\n                                ) : column.format &&\r\n                                  typeof value === \"number\" ? (\r\n                                  column.format(value)\r\n                                ) : (\r\n                                  value\r\n                                )}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={facultyKkkr.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(StickyHeadTable);\r\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Main/Header/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormBiodata.js",["244"],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormSchoolGrade.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormSchool.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/page/Js/Ppdb/Students/FormStart.js",[],{"ruleId":"245","severity":1,"message":"246","line":9,"column":10,"nodeType":"247","messageId":"248","endLine":9,"endColumn":23},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"245","severity":1,"message":"253","line":12,"column":3,"nodeType":"247","messageId":"248","endLine":12,"endColumn":10},{"ruleId":"245","severity":1,"message":"254","line":18,"column":3,"nodeType":"247","messageId":"248","endLine":18,"endColumn":12},{"ruleId":"245","severity":1,"message":"255","line":29,"column":3,"nodeType":"247","messageId":"248","endLine":29,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":8,"column":1,"nodeType":"258","endLine":36,"endColumn":3},{"ruleId":"245","severity":1,"message":"259","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":13},{"ruleId":"245","severity":1,"message":"260","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":14},{"ruleId":"245","severity":1,"message":"261","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"260","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"245","severity":1,"message":"262","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":24},{"ruleId":"245","severity":1,"message":"263","line":10,"column":8,"nodeType":"247","messageId":"248","endLine":10,"endColumn":26},{"ruleId":"245","severity":1,"message":"264","line":36,"column":10,"nodeType":"247","messageId":"248","endLine":36,"endColumn":14},{"ruleId":"245","severity":1,"message":"265","line":36,"column":16,"nodeType":"247","messageId":"248","endLine":36,"endColumn":23},{"ruleId":"245","severity":1,"message":"261","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":26},{"ruleId":"245","severity":1,"message":"266","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":12},{"ruleId":"245","severity":1,"message":"267","line":31,"column":11,"nodeType":"247","messageId":"248","endLine":31,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":16,"column":21,"nodeType":"270","endLine":16,"endColumn":44},{"ruleId":"245","severity":1,"message":"271","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":20},{"ruleId":"245","severity":1,"message":"272","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"273","line":1,"column":27,"nodeType":"247","messageId":"248","endLine":1,"endColumn":35},{"ruleId":"245","severity":1,"message":"271","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":20},{"ruleId":"245","severity":1,"message":"274","line":18,"column":3,"nodeType":"247","messageId":"248","endLine":18,"endColumn":13},{"ruleId":"245","severity":1,"message":"275","line":19,"column":3,"nodeType":"247","messageId":"248","endLine":19,"endColumn":19},{"ruleId":"245","severity":1,"message":"276","line":27,"column":10,"nodeType":"247","messageId":"248","endLine":27,"endColumn":16},{"ruleId":"245","severity":1,"message":"277","line":28,"column":8,"nodeType":"247","messageId":"248","endLine":28,"endColumn":12},{"ruleId":"245","severity":1,"message":"259","line":29,"column":8,"nodeType":"247","messageId":"248","endLine":29,"endColumn":13},{"ruleId":"245","severity":1,"message":"278","line":32,"column":5,"nodeType":"247","messageId":"248","endLine":32,"endColumn":17},{"ruleId":"245","severity":1,"message":"279","line":113,"column":7,"nodeType":"247","messageId":"248","endLine":113,"endColumn":16},{"ruleId":"245","severity":1,"message":"260","line":3,"column":8,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"280","line":4,"column":3,"nodeType":"247","messageId":"248","endLine":4,"endColumn":8},{"ruleId":"245","severity":1,"message":"281","line":10,"column":27,"nodeType":"247","messageId":"248","endLine":10,"endColumn":32},{"ruleId":"245","severity":1,"message":"282","line":10,"column":34,"nodeType":"247","messageId":"248","endLine":10,"endColumn":37},{"ruleId":"245","severity":1,"message":"283","line":10,"column":39,"nodeType":"247","messageId":"248","endLine":10,"endColumn":48},{"ruleId":"245","severity":1,"message":"284","line":10,"column":50,"nodeType":"247","messageId":"248","endLine":10,"endColumn":53},{"ruleId":"285","severity":1,"message":"286","line":69,"column":33,"nodeType":"287","messageId":"288","endLine":69,"endColumn":35},{"ruleId":"289","severity":1,"message":"290","line":149,"column":11,"nodeType":"270","endLine":149,"endColumn":57},{"ruleId":"289","severity":1,"message":"290","line":166,"column":11,"nodeType":"270","endLine":166,"endColumn":57},{"ruleId":"289","severity":1,"message":"290","line":183,"column":11,"nodeType":"270","endLine":183,"endColumn":57},{"ruleId":"289","severity":1,"message":"290","line":201,"column":9,"nodeType":"270","endLine":201,"endColumn":55},{"ruleId":"245","severity":1,"message":"291","line":15,"column":34,"nodeType":"247","messageId":"248","endLine":15,"endColumn":41},{"ruleId":"245","severity":1,"message":"292","line":39,"column":5,"nodeType":"247","messageId":"248","endLine":39,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":73,"column":8,"nodeType":"295","endLine":73,"endColumn":10,"suggestions":"296"},{"ruleId":"285","severity":1,"message":"297","line":205,"column":40,"nodeType":"287","messageId":"288","endLine":205,"endColumn":42},{"ruleId":"293","severity":1,"message":"298","line":133,"column":6,"nodeType":"295","endLine":133,"endColumn":8,"suggestions":"299"},{"ruleId":"289","severity":1,"message":"290","line":149,"column":13,"nodeType":"270","endLine":149,"endColumn":26},{"ruleId":"245","severity":1,"message":"300","line":31,"column":10,"nodeType":"247","messageId":"248","endLine":31,"endColumn":21},{"ruleId":"293","severity":1,"message":"301","line":163,"column":6,"nodeType":"295","endLine":163,"endColumn":8,"suggestions":"302"},{"ruleId":"285","severity":1,"message":"297","line":553,"column":44,"nodeType":"287","messageId":"288","endLine":553,"endColumn":46},{"ruleId":"285","severity":1,"message":"297","line":633,"column":44,"nodeType":"287","messageId":"288","endLine":633,"endColumn":46},{"ruleId":"285","severity":1,"message":"297","line":713,"column":44,"nodeType":"287","messageId":"288","endLine":713,"endColumn":46},{"ruleId":"245","severity":1,"message":"303","line":24,"column":10,"nodeType":"247","messageId":"248","endLine":24,"endColumn":14},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["304"],"no-negated-in-lhs",["305"],"'Contact' is defined but never used.","'AdminDash' is defined but never used.","'NotFound' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'SpeakerNotesIcon' is defined but never used.","'AccountProfileIcon' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'Card' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'useState' is defined but never used.","'Fragment' is defined but never used.","'DatePicker' is defined but never used.","'InlineDatePicker' is defined but never used.","'Formik' is defined but never used.","'Swal' is defined but never used.","'urlLoginLive' is assigned a value but never used.","'minOffset' is assigned a value but never used.","'Paper' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getUser' is defined but never used.","'CanvasJS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["306"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'id' and 'urlLoginLive'. Either include them or remove the dependency array.",["307"],"'btnDisabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'navigateTo', and 'onChangeVerif'. Either include them or remove the dependency array.",["308"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [props]",{"range":"315","text":"316"},"Update the dependencies array to be: [id, urlLoginLive]",{"range":"317","text":"318"},"Update the dependencies array to be: [id, navigateTo, onChangeVerif]",{"range":"319","text":"320"},[2181,2183],"[props]",[4074,4076],"[id, urlLoginLive]",[5129,5131],"[id, navigateTo, onChangeVerif]"]