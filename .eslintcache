[{"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/index.js":"1","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/serviceWorker.js":"2","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/App.js":"3","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/store.js":"4","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/reducers/application.js":"5","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Footer/Footer.js":"6","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Header/Header.js":"7","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/index.js":"8","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/index.js":"9","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/actions/application.js":"10","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/Header.js":"11","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Header.js":"12","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Header.js":"13","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Login.js":"14","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/PpdbOut.js":"15","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Admin/AddAdmin.js":"16","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegistrantTable.js":"17","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Admin/Dashboard.js":"18","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegistrantCard.js":"19","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegsitrantVerify.js":"20","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/verifyToken.js":"21","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/axios.js":"22","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegistrantSuccess.js":"23","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Main.js":"24","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Main.js":"25","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.react.js":"26","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Loading/Loader.jsx":"27","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/index.js":"28","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/registerAdmin.js":"29","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.min.js":"30"},{"size":826,"mtime":1621556355216,"results":"31","hashOfConfig":"32"},{"size":5086,"mtime":1621555045776,"results":"33","hashOfConfig":"32"},{"size":2166,"mtime":1621555045592,"results":"34","hashOfConfig":"32"},{"size":257,"mtime":1621555045780,"results":"35","hashOfConfig":"32"},{"size":791,"mtime":1621555045776,"results":"36","hashOfConfig":"32"},{"size":540,"mtime":1621555045680,"results":"37","hashOfConfig":"32"},{"size":641,"mtime":1621555045784,"results":"38","hashOfConfig":"32"},{"size":533,"mtime":1621555045868,"results":"39","hashOfConfig":"32"},{"size":53,"mtime":1621555045768,"results":"40","hashOfConfig":"32"},{"size":584,"mtime":1621557196438,"results":"41","hashOfConfig":"32"},{"size":1096,"mtime":1621555045732,"results":"42","hashOfConfig":"32"},{"size":1458,"mtime":1621555045740,"results":"43","hashOfConfig":"32"},{"size":1449,"mtime":1621555045708,"results":"44","hashOfConfig":"32"},{"size":7118,"mtime":1621557136272,"results":"45","hashOfConfig":"32"},{"size":16445,"mtime":1621557823694,"results":"46","hashOfConfig":"32"},{"size":7406,"mtime":1621555045784,"results":"47","hashOfConfig":"32"},{"size":7264,"mtime":1621555045864,"results":"48","hashOfConfig":"32"},{"size":10384,"mtime":1621555045784,"results":"49","hashOfConfig":"32"},{"size":9023,"mtime":1621555045840,"results":"50","hashOfConfig":"32"},{"size":15074,"mtime":1621555045864,"results":"51","hashOfConfig":"32"},{"size":400,"mtime":1621555045772,"results":"52","hashOfConfig":"32"},{"size":602,"mtime":1621555045760,"results":"53","hashOfConfig":"32"},{"size":23283,"mtime":1621555045840,"results":"54","hashOfConfig":"32"},{"size":2965,"mtime":1621555045740,"results":"55","hashOfConfig":"32"},{"size":3203,"mtime":1621555045708,"results":"56","hashOfConfig":"32"},{"size":1673,"mtime":1621555045632,"results":"57","hashOfConfig":"32"},{"size":588,"mtime":1621555045740,"results":"58","hashOfConfig":"32"},{"size":31,"mtime":1621555045772,"results":"59","hashOfConfig":"32"},{"size":381,"mtime":1621555045776,"results":"60","hashOfConfig":"32"},{"size":459238,"mtime":1621555045632,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"u8z9mu",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/index.js",["136"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-loadingmask/dist/react-loadingmask.css\";\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Open Sans\", \"sans-serif\"].join(\",\"),\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n",["137","138"],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/serviceWorker.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/App.js",["139"],"import React from 'react';\nimport './assets/css/main.css';\nimport {\n  PpdbOut, \n  Login,\n  AdminDash,\n  RegistrantTable, \n  RegistrantCard, \n  AddAdmin, \n  RegsitrantVerify,\n  RegistrantSuccess\n} from \"./views\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport Header from \"./views/Js/Header/Header\"\nimport Footer from \"./components/Footer/Footer\"\n\nimport { verify } from \"./modules/helpers\"\n\nfunction App() {\n\n  const isLogin = localStorage.getItem(\"token\");\n\n  return (   \n    <Router>\n      <Header />\n      <Switch>\n        <Route>\n          <Route path=\"/\" exact={true}>\n            {!isLogin ? <PpdbOut /> : <AdminDash /> }\n          </Route>\n          <Route path=\"/login\" exact={true}>\n            {!isLogin ? <Login /> : <RegistrantTable /> }\n          </Route>\n          <Route path=\"/regist-table\" exact={true}>\n            {isLogin ? <RegistrantTable /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/regist-success\" exact={true}>\n            {isLogin ? <RegistrantSuccess /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/regist-card/:id\" exact={true}>\n            <RegistrantCard />    \n          </Route>\n          <Route path=\"/regist-verify/:id\" exact={true}>\n            {isLogin ? <RegsitrantVerify /> : <Redirect to=\"/login\" />}            \n          </Route>\n          <Route path=\"/add-admin\" exact={true}>\n            {!isLogin ? <Redirect to=\"/login\" /> : verify().role == \"admin\" ? <RegistrantTable /> : <AddAdmin />}            \n          </Route>\n        </Route>        \n      </Switch>\n      <Footer />\n    </Router> \n  );\n}\nexport default App;\n\n// window.onbeforeunload = function(e) {\n  //   window.localStorage.unloadTime = JSON.stringify(new Date());\n  // }\n\n  // window.onload = function () {\n\n  //   let loadTime = new Date();\n  //   let unloadTime = new Date(JSON.parse(window.localStorage.unloadTime));\n  //   let refreshTime = loadTime.getTime() - unloadTime.getTime();\n\n  //   console.log(refreshTime)\n    \n  //   if(refreshTime>5000) {//3000 milliseconds \n  //     window.localStorage.removeItem(\"token\");\n  //   }\n    \n  // };","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/store.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/reducers/application.js",["140"],"import { SET_DASH } from \"../actions/application\"\n\nconst initialState = {\n    loading: false,\n    users: [],\n};\n\nexport default (state = initialState, {type, payload}) => {\n    console.log(type);\n    switch (type) {\n        case \"SHOW_LOADER\":\n            return {...state, loading : true};\n        \n        case \"HIDE_LOADER\":\n            return {...state, loading : false};\n\n        case SET_DASH:\n            return payload;\n\n        case \"GET_USER\":\n            return {\n                ...state,\n                users: payload,\n                loading: false\n            }\n        case \"ERROR_USER\":\n            return {\n                ...state,\n                users: payload,\n                loading: false\n            }          \n\n        default:\n            return state;\n    }\n};","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Footer/Footer.js",["141"],"import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nexport default function Copyright() {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"textSecondary\"\n      align=\"center\"\n      style={{ marginTop: \"50px\" }}\n    >\n      {\"This website template by © \"}\n      <a\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href=\"https://material-ui.com/getting-started/templates/\"\n      >\n        Material UI Template\n      </a>\n    </Typography>\n  );\n}\n","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Header/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/index.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/index.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/actions/application.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Guest/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Header.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Login.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/PpdbOut.js",["142"],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Admin/AddAdmin.js",["143","144","145","146","147"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as LinkRouter, withRouter } from \"react-router-dom\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport swal from \"sweetalert2\"\n\nimport { registerValidation } from \"../../../modules/validation\"\nimport { axiosReportsUsers } from \"../../../modules/helpers\"\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Admin © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        SMKN 1 Nawangan\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignIn(props) {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>        \n        <Typography component=\"h1\" variant=\"h5\">\n          Daftar Admin\n        </Typography>\n        <Formik\n        initialValues={{\n          fullName: \"\",  \n          username: \"\",\n          confirmPassword: \"\",\n          password: \"\"          \n        }}\n        validate={registerValidation}\n        onSubmit={values => {\n            if (values.password != values.confirmPassword) {\n                swal.fire({\n                    icon: 'error',\n                    title: 'Mohon samakan password'\n                })\n            } else {\n                let timerInterval\n                swal.fire({\n                title: 'Silahkan tunggu..',              \n                timer: 9999999,\n                timerProgressBar: true,\n                onBeforeOpen: () => {\n                    swal.showLoading()\n                    timerInterval = setInterval(() => {\n                    const content = swal.getContent()\n                    if (content) {\n                        const b = content.querySelector('b')\n                        if (b) {\n                        b.textContent = swal.getTimerLeft()\n                        }\n                    }\n                    }, 100)\n                },\n                onClose: () => {\n                    clearInterval(timerInterval)\n                }\n                }).then((result) => {          \n                    if (result.dismiss === swal.DismissReason.timer) {\n                        console.log('I was closed by the timer')\n                    }\n                }) \n                axiosReportsUsers()\n                .post(`auth/admin/register`, {fullName:values.fullName, username:values.username, password:values.password, role:\"admin\"})\n                .then(response => {                    \n                    swal.fire({\n                        icon: 'success',\n                        title: 'Pendaftaran admin berhasil'\n                    }).then(result => {\n                      document.getElementById('fullName').value = \"\"\n                      document.getElementById('username').value = \"\"                      \n                      document.getElementById('confirmPassword').value = \"\"\n                      document.getElementById('password').value = \"\"\n                    })\n                    \n                }).catch(error => {\n                    swal.fire({\n                    icon: 'error',\n                    title: 'Pendaftaran gagal, silahkan coba kembali'\n                    })\n                })\n            }  \n        }}\n        >\n          {({\n            values,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          }) => (\n            <form\n              className={classes.form}\n              noValidate\n              onSubmit={handleSubmit}              \n            >\n        <form className={classes.form} noValidate>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"fullName\"\n            label=\"Nama lengkap\"\n            name=\"fullName\"\n            autoComplete=\"fullName\"\n            autoFocus\n            defaultValue={values.fullName}\n            onChange={handleChange}\n            onBlur={handleBlur}            \n          />        \n          <a style={{color:\"red\", fontStyle:\"italic\"}} >\n          <ErrorMessage name=\"fullName\" />          \n          </a>              \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            defaultValue={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <a style={{color:\"red\", fontStyle:\"italic\"}} >\n            <ErrorMessage name=\"username\" />          \n          </a>              \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"confirmPassword\"\n            autoComplete=\"confirmPassword\"\n            defaultValue={values.confirmPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <a style={{color:\"red\", fontStyle:\"italic\"}} >\n            <ErrorMessage name=\"password\" />          \n          </a>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Konfirmasi password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            defaultValue={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />                             \n        </form>\n        <a style={{color:\"red\", fontStyle:\"italic\"}} >\n            <ErrorMessage name=\"password\" />          \n        </a>\n        <Button            \n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}            \n          >\n            Tambah\n          </Button>\n          </form>\n          )}\n        </Formik>\n          <Button\n           style={{marginTop:\"0px\"}}            \n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            component={LinkRouter}\n            to=\"/\"\n          >\n            Kembali\n          </Button> \n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport default withRouter(SignIn);","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegistrantTable.js",["148"],"import React, {useEffect} from 'react';\nimport { Link, withRouter } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Swal from \"sweetalert2\"\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { axiosReportsUsers } from \"../../../modules/helpers\"\n\nconst columns = [\n  { id: 'idRegister', label: 'ID Register', minWidth: 170 },\n  { id: 'fullName', label: 'Nama Lengkap', minWidth: 100 },\n  {\n    id: 'nisn',\n    label: 'NISN',\n    minWidth: 170,  \n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'fromSchool',\n    label: 'Asal Sekolah',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'facultyFirst',\n    label: 'Jurusan Utama',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'action',\n    label: 'Aksi',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: '130px'\n  },\n  container: {\n    maxHeight: 440,\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\nfunction StickyHeadTable() {  \n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [data, setData] = React.useState([])  \n  const [timeNow, setTimeNow] = React.useState(\"\")\n  const [dateNow, setDateNow] = React.useState(\"\")    \n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };  \n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeSearchRegistrant = (event) => {    \n    axiosReportsUsers()\n        .get(`ppdb/search-fullname/?q=${event.target.value}`)\n        .then(\n          res => setData(res.data.data)\n        ).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Gagal mengambil data, silahkan coba kembali'\n          })\n        })        \n  };  \n\n  const myTimer = (event) => {\n    let hoursNow = new Date().getHours()\n    let hoursNowZ = (hoursNow <= 9 ? `0`+hoursNow : hoursNow)\n    let minutesNow = new Date().getMinutes()\n    let minutesNowZ = (minutesNow <= 9 ? `0`+minutesNow : minutesNow)\n    let secondsNow = new Date().getSeconds()    \n    let secondsNowZ = (secondsNow <= 9 ? `0`+secondsNow : secondsNow)\n    let fullTimeNow = `${hoursNowZ}:${minutesNowZ}:${secondsNowZ}` \n    setTimeNow(fullTimeNow) \n\n    let createdAtFullyear = new Date().getFullYear()\n    let createdAtMonth = new Date().getMonth()+1\n    let createdAtMonthZ = (createdAtMonth <= 9 ? `0`+createdAtMonth : createdAtMonth)\n    let createdAtDay = new Date().getDate()\n    let createdAtDayZ = (createdAtDay <= 9 ? `0`+createdAtDay : createdAtDay)\n    let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}` \n    setDateNow(fullDateCreated)\n  }    \n\n  useEffect(() => {        \n\n    let myVar = setInterval(myTimer, 1000);  \n\n      axiosReportsUsers()\n        .get(`ppdb-admin`)\n        .then(\n          res => setData(res.data.data)\n        ).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Gagal mengambil data, silahkan coba kembali'\n          })\n        })\n        \n      return () => {\n        clearInterval(myVar)\n      }\n  }, [])\n          \n  return (\n    <div>          \n    <div style={{marginBottom:\"100px\"}}>\n          <TextField\n              variant=\"outlined\"\n              margin=\"normal\"            \n              id=\"fullName\"\n              label=\"Cari dengan nama..\"\n              name=\"fullName\"\n              autoComplete=\"fullName\"\n              onChange={handleChangeSearchRegistrant}\n              style={{position:\"absolute\", left:\"5px\", top:\"70px\"}}              \n            />       \n            <TextField\n              style={{position:\"absolute\", right:\"5px\", top:\"70px\", width:\"108px\"}}\n              variant=\"outlined\"\n              margin=\"normal\"            \n              id=\"fullName\"\n              size=\"small\"\n              value={dateNow}\n              disabled\n            />\n            <TextField\n              style={{position:\"absolute\", right:\"5px\", top:\"120px\", width:\"108px\"}}\n              variant=\"outlined\"\n              margin=\"normal\"            \n              id=\"fullName\"\n              size=\"small\"\n              value={timeNow}\n              disabled\n            />\n    </div>\n    <Paper className={classes.root}>       \n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idRegister}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.id == \"action\" ? \n                        <div>\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\" style={{marginTop:\"10px\", marginRight:\"10px\"}} component={Link} to={`regist-card/${row._id}`}>\n                                Detail\n                            </Button>\n                            <Button variant=\"contained\" size=\"small\" color=\"primary\" style={{marginTop:\"10px\", marginRight:\"10px\"}} component={Link} to={`regist-verify/${row._id}`}>\n                                Verifikasi\n                            </Button>\n                          </div>\n                          :\n                         column.format && typeof value === 'number' ? column.format(value) : value}                        \n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />      \n    </Paper>\n    </div>\n  );\n}\n\nexport default withRouter(StickyHeadTable)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Admin/Dashboard.js",["149","150","151"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux'\n\nimport CanvasJSReact from '../../../assets/chartjs/canvasjs.react';\nimport Loader from '../../../components/Loading/Loader';\nimport Swal from \"sweetalert2\"\n\nimport { showLoader, hideLoader, getUser } from '../../../actions/application';\nimport { axiosReportsUsers } from \"../../../modules/helpers\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  rootCard: {\n      minWidth: 275,\n  },\n  paper: {\n    marginTop: 10,\n    padding: theme.spacing(1),\n  },\n  pos: {\n    marginBottom: 12,\n    marginTop: 5,\n  },\n  chartPart: {\n      marginTop: 20,\n  },\n}));\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nfunction Dashboard(props) {\n  const classes = useStyles();\n  const [dateObj, setDateObj] = React.useState([]);\n  const [dataDash, setDataDash] = React.useState([]);\n  const [dataPerVery, setDataPerVery] = React.useState([]);\n  const [dataPerDay, setDataPerDay] = React.useState([]);\n\n    useEffect(() => {        \n        formatDate();\n        props.dispatch(showLoader())\n\n        axiosReportsUsers()\n        .get(`ppdb-admin/count/dash`)\n        .then( res => {\n            props.dispatch(hideLoader())\n            console.log(res.data)\n            setDataDash(res.data)\n            setDataPerVery(res.data.percentReg[0])\n            setDataPerDay(res.data.lastTen[0])\n        }).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Gagal mengambil data, silahkan coba kembali'\n          })\n        })\n\n    }, [])\n    \n  const formatDate = () => {\n        var dateWith29 = new Date();\n\n        function incrementDate(dateInput,increment) {\n            var dateFormatTotime = new Date(dateInput);\n            var increasedDate = new Date(dateFormatTotime.getTime() +(increment *86400000));\n            var d = new Date(increasedDate),\n                month = '' + (d.getMonth() + 1),\n                day = '' + d.getDate(),\n                year = d.getFullYear();\n\n            if (month.length < 2) \n                month = '0' + month;\n            if (day.length < 2) \n                day = '0' + day;\n\n            var dateNow = [year, month, day].join('-')\n            return dateNow;\n        }\n\n        setDateObj({\n            decreaseToday: incrementDate(dateWith29, 0),\n            decreaseOneDay: incrementDate(dateWith29, -1),\n            decreaseTwoDay: incrementDate(dateWith29, -2),\n            decreaseThreeDay: incrementDate(dateWith29, -3),\n            decreaseFourDay: incrementDate(dateWith29, -4),\n            decreaseFiveDay: incrementDate(dateWith29, -5),\n            decreaseSixDay: incrementDate(dateWith29, -6),\n            decreaseSevenDay: incrementDate(dateWith29, -7),\n            decreaseEightDay: incrementDate(dateWith29, -8),\n            decreaseNineDay: incrementDate(dateWith29, -9)\n        });\n    }\n\n    const optionsSuccessFail = {\n        animationEnabled: true,\n        exportFileName: \"Rekap Sukses Dan Gagal\",\n        exportEnabled: true,\n        title: {\n            text: \"Rekap Sukses Dan Gagal\"\n        },\n        data: [{\t\t\t\t\n                type: \"column\",\n                dataPoints: [\n                    { label: \"Verifikasi Sukses\",  y: dataDash.totVerified },\n                    { label: \"Verifikasi Gagal\", y: dataDash.totUnverified },\n                ]\n        }]\n    }\n\n    const optionsTotal = {\n        animationEnabled: true,\n        exportFileName: \"Persentase Pendafaftar\",\n        exportEnabled: true,\n        title:{\n            text: \"Persentase Pendaftar\"\n        },\n        data: [{\n            type: \"pie\",\n            showInLegend: true,\n            legendText: \"{label}\",\n            toolTipContent: \"{label}: <strong>{y}%</strong>\",\n            indexLabel: \"{y}%\",\n            indexLabelPlacement: \"inside\",\n            dataPoints: [\n                { y: dataPerVery.verify, label: \"Verifikasi Sukses\" },\n                { y: dataPerVery.unverify, label: \"Verifikasi Gagal\" },\n                { y: dataPerVery.notytVerify, label: \"Belum Terverifikasi\" },\n            ]\n        }]\n    }\n\n    const optionsPerDay = {\n        theme: \"light2\",\n        animationEnabled: true,\n        exportEnabled: true,\n        title: {\n            text: \"Jumlah Pendaftar 10 Hari Terakhir\"\n        },\n        data: [\n                {\n                    type: \"area\",\n                    xValueFormatString: \"DD MMM YYYY\",\n                    yValueFormatString: \"#,##0.## Pendaftar\",\n                    dataPoints: [\n                        { x: new Date(dateObj.decreaseToday), y: dataPerDay.today},\n                        { x: new Date(dateObj.decreaseOneDay), y: dataPerDay.decOne},\n                        { x: new Date(dateObj.decreaseTwoDay), y: dataPerDay.decTwo},\n                        { x: new Date(dateObj.decreaseThreeDay), y: dataPerDay.decThr},\n                        { x: new Date(dateObj.decreaseFourDay), y: dataPerDay.decFou},\n                        { x: new Date(dateObj.decreaseFiveDay), y: dataPerDay.decFiv},\n                        { x: new Date(dateObj.decreaseSixDay), y: dataPerDay.decSix},\n                        { x: new Date(dateObj.decreaseSevenDay), y: dataPerDay.decSev},\n                        { x: new Date(dateObj.decreaseEightDay), y: dataPerDay.decEig},\n                        { x: new Date(dateObj.decreaseNineDay), y: dataPerDay.decNin},\n                    ]\n                }\n        ]\n    }\n\n  return (\n      <div>\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs>\n                <div className={classes.paper}>\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Total Pendaftar\n                            </Typography>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\n                                {dataDash.length === 0 ? 0 : dataDash.totalAll}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button size=\"small\">Visit</Button>\n                        </CardActions>\n                    </Card>\n                </div>\n                </Grid>\n                <Grid item xs>\n                    <div className={classes.paper}>\n                        <Card className={classes.root}>\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Belum Terverifikasi\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\n                                    {dataDash.length === 0 ? 0 : dataDash.totNotYetVer}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">Visit</Button>\n                            </CardActions>\n                        </Card>\n                    </div>\n                </Grid>\n                <Grid item xs>\n                    <div className={classes.paper}>\n                        <Card className={classes.root}>\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Verifikasi Sukses\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\n                                    {dataDash.length === 0 ? 0 : dataDash.totVerified}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">Visit</Button>\n                            </CardActions>\n                        </Card>\n                    </div>\n                </Grid>\n                <Grid item xs>\n                    <div className={classes.paper}>\n                        <Card className={classes.root}>\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    Verifikasi Gagal\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.pos} color=\"textSecondary\">\n                                    {dataDash.length === 0 ? 0 : dataDash.totUnverified}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">Visit</Button>\n                            </CardActions>\n                        </Card>\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n        <div className={classes.chartPart}>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        <CanvasJSChart options = {optionsSuccessFail}/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <CanvasJSChart options = {optionsTotal}/>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n        <div className={classes.chartPart}>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <CanvasJSChart options = {optionsPerDay}/>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n        <Loader />\n    </div>\n  );\n}\n\nconst mapStateToProps = state =>({ users: state.users})\n\nexport default connect(mapStateToProps)(Dashboard)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegistrantCard.js",["152","153"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as LinkRouter,withRouter } from 'react-router-dom'\nimport axios from \"axios\"\nimport Swal from \"sweetalert2\"\nimport ReactToPdf from 'react-to-pdf'\n\nconst ref = React.createRef();\n\nconst useStyles = makeStyles((theme) => ({  \n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Checkout({match}) {\n  const classes = useStyles();  \n  const isLogin = localStorage.getItem(\"token\");\n  let linkBack = \"\"\n\n  if (isLogin) {\n    linkBack = \"/regist-table\"\n  } else {\n    linkBack = \"/\"\n  }\n\n  const [idRegister, setIdRegister] = React.useState(\"\")\n  const [fullName, setFullName] = React.useState(\"\")  \n  const [nisn, setNisn] = React.useState(\"\")\n  const [bornPlace, setBornPlace] = React.useState(\"\")\n  const [dateBorn, setDateBorn] = React.useState(\"\")\n  const [fromSchool, setFromSchool] = React.useState(\"\")\n  const [firstFaculty, setFirstFaculty] = React.useState(\"\")\n  const [secondFaculty, setSecondFaculty] = React.useState(\"\")\n  const [createdAt, setCreatedAt] = React.useState(\"\")\n\n  const id = match.params.id\n  let urlLoginLive = process.env.REACT_APP_API_LOGIN_LIVE;  \n\n  useEffect(() => {\n    let timerInterval\n        Swal.fire({\n          title: 'Silahkan tunggu..',              \n          timer: 9999999,\n          timerProgressBar: true,\n          onBeforeOpen: () => {\n            Swal.showLoading()\n            timerInterval = setInterval(() => {\n              const content = Swal.getContent()\n              if (content) {\n                const b = content.querySelector('b')\n                if (b) {\n                  b.textContent = Swal.getTimerLeft()\n                }\n              }\n            }, 100)\n          },\n          onClose: () => {\n            clearInterval(timerInterval)\n          }\n        }).then((result) => {          \n          if (result.dismiss === Swal.DismissReason.timer) {\n            console.log('I was closed by the timer')\n          }\n        }) \n    axios\n        .get(`${urlLoginLive}ppdb-admin/id/${id}`)\n        .then(response => {          \n          setFullName({ fullName : response.data.data[0].fullName })\n          setIdRegister({ idRegister : response.data.data[0].idRegister })\n          setNisn({ nisn : response.data.data[0].nisn })\n          setBornPlace({ bornPlace : response.data.data[0].bornPlace })\n          setDateBorn({ dateBorn : response.data.data[0].dateBorn })\n          setFromSchool({ fromSchool : response.data.data[0].fromSchool })\n          setFirstFaculty({ firstFaculty : response.data.data[0].facultyFirst })\n          setSecondFaculty({ secondFaculty : response.data.data[0].facultySecond })\n          setCreatedAt({ createdAt : response.data.data[0].created_at })\n\n          Swal.fire({\n            icon: 'success',\n            title: 'Sukses mengambil data'\n          })\n        }).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Gagal mengambil data, silahkan coba kembali'\n          })\n        })\n  }, []) \n\n  let createdAtFullyear = new Date(createdAt.createdAt).getFullYear()  \n  let createdAtMonth = new Date(createdAt.createdAt).getMonth()+1\n  let createdAtMonthZ = (createdAtMonth <= 9 ? `0`+createdAtMonth : createdAtMonth)\n  let createdAtDay = new Date(createdAt.createdAt).getDate()\n  let createdAtDayZ = (createdAtDay <= 9 ? `0`+createdAtDay : createdAtDay)\n  let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}`  \n\n  return (     \n    <div id=\"divToPrint\">       \n    <React.Fragment>\n      <CssBaseline />           \n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n        <a ref={ref}>\n          <React.Fragment>             \n                <Typography variant=\"h5\" align=\"center\">\n                    SMKN 1 Nawangan\n                  </Typography>\n                  <Typography variant=\"h6\" align=\"center\">\n                    PPDB Online 2020\n                  </Typography>      \n                  <div style={{marginTop:\"20px\"}}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        ID Peserta\n                    </Typography>\n                    <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                        {idRegister.idRegister}\n                    </Typography>\n                  </div>\n                  <div style={{marginTop:\"10px\"}}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Nama Lengkap\n                    </Typography>\n                    <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                        {fullName.fullName}\n                    </Typography>\n                  </div>\n                  <div style={{marginTop:\"10px\"}}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        NISN\n                    </Typography>\n                    <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                        {nisn.nisn}\n                    </Typography>\n                  </div>\n                  <div style={{marginTop:\"10px\"}}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Tempat Tanggal Lahir\n                    </Typography>\n                    <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                        {bornPlace.bornPlace}, {dateBorn.dateBorn}\n                    </Typography>\n                </div>\n              <div style={{marginTop:\"10px\"}}>\n                <Typography variant=\"h6\" gutterBottom>\n                    Asal Sekolah\n                </Typography>\n                <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                    {fromSchool.fromSchool}\n                </Typography>\n            </div>\n            <div style={{marginTop:\"10px\"}}>\n              <Typography variant=\"h6\" gutterBottom>\n                  Pilihan Jurusan\n              </Typography>\n              <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                  1. {firstFaculty.firstFaculty}\n              </Typography>\n              <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                  2. {secondFaculty.secondFaculty}\n              </Typography>\n            </div>\n            <div style={{marginTop:\"10px\"}}>\n              <Typography variant=\"h6\" gutterBottom>\n                  Tanggal Pendaftaran\n              </Typography>\n              <Typography style={{marginTop:\"-10px\"}} gutterBottom>\n                  {fullDateCreated}\n              </Typography>\n            </div>           \n      </React.Fragment>                              \n    </a>       \n                <div style={{textAlign:\"center\"}}>    \n                <ReactToPdf targetRef={ref} filename=\"Kartu-Peserta.pdf\" x={30} y={.5}>\n                    {({toPdf}) => (\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"                    \n                        className={classes.submit}                    \n                        style={{marginTop:\"40px\", marginRight:\"5px\"}}\n                        onClick={toPdf}\n                        component={LinkRouter}                  \n                      >\n                        Download pdf\n                      </Button>\n                    )}\n                </ReactToPdf>                                                                      \n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"                    \n                    className={classes.submit}\n                    component={LinkRouter}\n                    to={linkBack}\n                    style={{marginTop:\"40px\", marginLeft:\"5px\"}}                    \n                  >\n                    Kembali\n                  </Button>\n                </div>                                  \n        </Paper>        \n      </main>\n    </React.Fragment>    \n    </div>\n  );\n}\n\nexport default withRouter(Checkout)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegsitrantVerify.js",["154","155"],"import React, {useEffect} from 'react'\nimport { withRouter, useHistory } from 'react-router-dom';\n\nimport { CardDeck, Card, Button} from \"react-bootstrap\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Swal from \"sweetalert2\"\n\nimport { axiosReportsUsers } from \"../../../modules/helpers\"\n\nconst useStyles = makeStyles({\n    root: {\n      width: '100%',\n    },\n    container: {\n      maxHeight: 440,\n    },\n    title: {\n      flexGrow: 1,\n    },\n  });\n\n\nfunction RegsitrantVerify({match}, props) {\n    const classes = useStyles();\n    const [btnSuccess, setBtnSuccess] = React.useState()\n    const [btnFail, setBtnFail] = React.useState()\n    const [btnDisabled, setBtnDisabled] = React.useState()\n    const [registrantData, setRegistrantData] = React.useState([])\n    const [verifFull, setVerifFull] = React.useState(\"\")\n    const [idRegister, setIdRegister] = React.useState(\"\")\n\n    const id = match.params.id    \n\n    const onChangeVerif = (event) => {\n        let rdFullNameTrue = document.querySelector('input[name=fullnameTrueX]').checked;\n        let rdFullNameFalse = document.querySelector('input[name=fullnameFalseX]').checked;\n        let rdNisnTrue = document.querySelector('input[name=nisnTrueX]').checked;\n        let rdNisnFalse = document.querySelector('input[name=nisnFalseX]').checked;\n        let rdBornTrue = document.querySelector('input[name=bornTrueX]').checked;\n        let rdBornFalse = document.querySelector('input[name=bornFalseX]').checked;\n        let rdFromSchTrue = document.querySelector('input[name=fromSchoolTrueX]').checked;\n        let rdFromSchFalse = document.querySelector('input[name=fromSchoolFalseX]').checked;\n\n        if (!rdFullNameTrue && !rdFullNameFalse) {\n            setBtnSuccess(true)\n            setBtnFail(true)\n        } else if (!rdNisnTrue && !rdNisnFalse) {\n            setBtnSuccess(true)\n            setBtnFail(true)\n        } else if (!rdBornTrue && !rdBornFalse) {\n            setBtnSuccess(true)\n            setBtnFail(true)\n        } else if (!rdFromSchTrue && !rdFromSchFalse) {\n            setBtnSuccess(true)\n            setBtnFail(true)\n        } else {\n            setBtnDisabled(false)\n            if (rdFullNameTrue && rdNisnTrue && rdBornTrue && rdFromSchTrue) {\n              setVerifFull({registrantData: id,\n                            resultVerify: \"verified\",\n                            fullNameVerify: rdFullNameTrue,\n                            nisnVerify: rdNisnTrue,\n                            bornPlaceVerify: rdBornTrue,\n                            dateBornVerify: rdBornTrue,\n                            fromSchoolVerify: rdFromSchTrue,\n                            notedVerify: \"verified\"\n                          })\n              setBtnSuccess(false)\n              setBtnFail(true)\n            } else {        \n              setVerifFull({registrantData: id,\n                            resultVerify: \"unverified\",\n                            fullNameVerify: rdFullNameTrue,\n                            nisnVerify: rdNisnTrue,\n                            bornPlaceVerify: rdBornTrue,\n                            dateBornVerify: rdBornTrue,\n                            fromSchoolVerify: rdFromSchTrue,                \n                          })                    \n              setBtnSuccess(true)\n              setBtnFail(false)\n            }               \n        }                       \n    }   \n    \n    const onLoading = () => {\n\n      let timerInterval\n\n      Swal.fire({\n        title: 'Silahkan tunggu..',              \n        timer: 9999999,\n        timerProgressBar: true,\n        onBeforeOpen: () => {\n          Swal.showLoading()\n          timerInterval = setInterval(() => {\n            const content = Swal.getContent()\n            if (content) {\n              const b = content.querySelector('b')\n              if (b) {\n                b.textContent = Swal.getTimerLeft()\n              }\n            }\n          }, 100)\n        },\n        onClose: () => {\n          clearInterval(timerInterval)\n        }\n      }).then((result) => {          \n        if (result.dismiss === Swal.DismissReason.timer) {\n          console.log('I was closed by the timer')\n        }\n      })\n    }\n\n    useEffect(() => {                   \n\n        let renderChange\n\n        setBtnSuccess(true)\n        setBtnFail(true)\n\n        onLoading()\n        axiosReportsUsers()\n            .get(`ppdb-admin/id/${id}`)\n            .then(res => {              \n              if (res.data.data[0].checkVerifyBiodata === \"yes\") {\n                setRegistrantData(res.data.data[0])      \n                setIdRegister(res.data.data[0].idRegister)\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Sukses mengambil data'\n                  }).then(result => {                                        \n                    renderChange = setInterval(onChangeVerif, 500);\n                  })\n              } else {\n                Swal.fire({\n                  icon: 'error',\n                  title: 'Maaf, tidak bisa verifikasi ulang pendaftar yang sudah terverifikasi'\n                }).then(result => {\n                  navigateTo()\n                })\n              }                \n            }).catch(error => {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Gagal mengambil data, silahkan coba kembali'\n                  })\n            })                \n\n        return () => {\n            clearInterval(renderChange)\n        }        \n\n    }, [])\n    \n    const onVerSuccess = () => {      \n        Swal.fire({\n            title: 'Verifikasi berhasil?',\n            text: \"Pastikan semua data pendaftar benar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Ya, semua data benar!'\n          }).then((result) => {\n            if (result.value) {\n              onLoading()\n\n              const postVerify = axiosReportsUsers().post(`verify`, {...verifFull, idRegister: idRegister})\n              const updateVerify = axiosReportsUsers().put(`ppdb-admin/id/${id}`, {checkVerifyBiodata : \"verified\"})\n\n              axiosReportsUsers()\n              .all([postVerify, updateVerify])\n              .then(axiosReportsUsers().spread((...responses) => {\n                if (responses[0].status === 200 && responses[1].status === 200) {\n                  Swal.fire({\n                    icon: 'success',\n                    title: `Verifikasi data atas nama ${registrantData.fullName} telah berhasil!`\n                  }).then(result => {\n                    navigateTo()\n                  })\n                } else {\n                  Swal.fire({\n                    icon: 'error',\n                    title: 'Gagal verifikasi data, silahkan coba kembali'\n                  })\n                }                \n              })).catch(error => {\n                Swal.fire({\n                  icon: 'error',\n                  title: 'Gagal verifikasi data, silahkan coba kembali'\n                })\n              })              \n            }\n          })\n    }\n\n    const onVerFail = () => {      \n      console.log(verifFull)\n        Swal.fire({\n            title: 'Verifikasi gagal?',\n            text: \"Verifikasi data pendaftar ini terkonfirmasi gagal, pastikan semua data pendaftar benar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Ya'\n          }).then((result) => {\n            if (result.value) {\n                Swal.mixin({\n                    input: 'text',\n                    confirmButtonText: 'Next &rarr;',\n                    showCancelButton: true,\n                    progressSteps: ['1']\n                  }).queue([\n                    {\n                      title: 'Catatan verifikasi',\n                      text: 'Tambahkan catatan untuk verifikasi gagal ini'\n                    }\n                  ]).then((result) => {\n                    if (result.value) {\n                      const answer = result.value\n                      const dataAnswer = answer.toString()                      \n\n                      const postVerify = axiosReportsUsers().post(`verify`, {...verifFull, idRegister: idRegister, notedVerify: dataAnswer})\n                      const updateVerify = axiosReportsUsers().put(`ppdb/id/${id}`, {checkVerifyBiodata : \"unverified\"})\n                      \n                      onLoading()\n                      axiosReportsUsers()\n                      .all([postVerify, updateVerify])\n                      .then(axiosReportsUsers().spread((...responses) => {\n                        if (responses[0].status === 200 && responses[1].status === 200) {\n                          Swal.fire({\n                            icon: 'success',\n                            title: `Verifikasi data atas nama ${registrantData.fullName} telah terverifikasi gagal!`\n                          }).then(result => {\n                            navigateTo()\n                          })\n                        } else {\n                          Swal.fire({\n                            icon: 'error',\n                            title: 'Gagal verifikasi data, silahkan coba kembali'\n                          })\n                        } \n                      })).catch(error => {\n                        Swal.fire({\n                          icon: 'error',\n                          title: 'Gagal verifikasi data, silahkan coba kembali'\n                        })\n                      })\n                    }\n                  })              \n            }\n          })\n    }\n\n    const history = useHistory();\n    const navigateTo = () => history.push('/regist-table');\n\n    return (\n        <div>\n            <div style={{marginTop:\"50px\", marginBottom:\"50px\", textAlign:\"center\"}}>\n            <Typography variant=\"h5\" className={classes.title}>\n              Verifikasi Biodata\n            </Typography>\n            </div>\n            <CardDeck>\n                <Card>\n                    <Card.Body>\n                    <Card.Title>Nama lengkap</Card.Title>\n                    <Card.Text>\n                        {registrantData.fullName}\n                    </Card.Text>\n                    <FormControl component=\"fieldset\">                        \n                        <RadioGroup row aria-label=\"position\" name=\"position\">\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"fullnameTrue\" name=\"fullnameTrueX\" />} label=\"Benar\"/>\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"fullNameFalse\" name=\"fullnameFalseX\" />} label=\"Salah\" />\n                        </RadioGroup>\n                    </FormControl>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\n                    </Card.Footer>\n                </Card>\n                <Card>                \n                    <Card.Body>\n                    <Card.Title>NISN</Card.Title>\n                    <Card.Text>\n                        {registrantData.nisn}\n                    </Card.Text>\n                    <FormControl component=\"fieldset\">                        \n                        <RadioGroup row aria-label=\"position\" name=\"position\">\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"nisnTrue\" name=\"nisnTrueX\" />} label=\"Benar\"/>\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"nisnFalse\" name=\"nisnFalseX\" />} label=\"Salah\" />\n                        </RadioGroup>\n                    </FormControl>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\n                    </Card.Footer>\n                </Card>\n                <Card>                    \n                    <Card.Body>\n                    <Card.Title>Tempat tanggal lahir</Card.Title>\n                    <Card.Text>\n                        {`${registrantData.bornPlace}, ${registrantData.dateBorn}`}\n                    </Card.Text>\n                    <FormControl component=\"fieldset\">                        \n                        <RadioGroup row aria-label=\"position\" name=\"position\">\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"bornTrue\" name=\"bornTrueX\" />} label=\"Benar\"/>\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"bornFalse\" name=\"bornFalseX\" />} label=\"Salah\" />\n                        </RadioGroup>\n                    </FormControl>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\n                    </Card.Footer>\n                </Card>\n                <Card>                \n                    <Card.Body>\n                    <Card.Title>Asal sekolah</Card.Title>\n                    <Card.Text>\n                        {registrantData.fromSchool}\n                    </Card.Text>\n                    <FormControl component=\"fieldset\">                        \n                        <RadioGroup row aria-label=\"position\" name=\"position\">\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"fromSchoolTrue\" name=\"fromSchoolTrueX\" />} label=\"Benar\"/>\n                            <FormControlLabel control={<Radio color=\"primary\" value=\"fromSchoolFalse\" name=\"fromSchoolFalseX\" />} label=\"Salah\" />\n                        </RadioGroup>\n                    </FormControl>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>            \n            <div style={{textAlign:\"center\", marginTop:\"40px\"}}>                            \n                <Button variant=\"success\" disabled={btnSuccess} style={{marginTop:\"10px\", marginRight:\"10px\"}} onClick={onVerSuccess}>Verifikasi Sukses</Button>\n                <Button variant=\"danger\" disabled={btnFail} style={{marginTop:\"10px\", marginRight:\"10px\"}} onClick={onVerFail}>Verifikasi Gagal</Button>\n                <Button \n                    variant=\"secondary\" \n                    style={{marginTop:\"10px\", marginRight:\"10px\"}}\n                    onClick={navigateTo}                    \n                    >\n                    Kembali\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(RegsitrantVerify)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/verifyToken.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/helpers/axios.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/views/Js/Registrant/RegistrantSuccess.js",["156","157","158","159","160"],"import React, {useEffect} from 'react';\nimport { Link, withRouter } from 'react-router-dom'\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Swal from \"sweetalert2\"\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport SearchIcon from '@material-ui/icons/Search';\n\n//icons\nimport EuroSymbolIcon from '@material-ui/icons/EuroSymbol';\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport SpaIcon from '@material-ui/icons/Spa';\n\nimport { axiosReportsUsers } from \"../../../modules/helpers\"\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-auto-tabpanel-${index}`}\n        aria-labelledby={`scrollable-auto-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `scrollable-auto-tab-${index}`,\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n  }\n\nconst columns = [\n  { id: 'idRegister', label: 'ID Register', minWidth: 170 },\n  { id: 'fullName', label: 'Nama Lengkap', minWidth: 100 },\n  {\n    id: 'nisn',\n    label: 'NISN',\n    minWidth: 170,  \n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'fromSchool',\n    label: 'Asal Sekolah',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'facultyFirst',\n    label: 'Jurusan Utama',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'action',\n    label: 'Aksi',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',    \n  },\n  rootZ: {\n    width: '100%',\n    marginTop: '100px'\n  },\n  container: {\n    maxHeight: 440,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  rootZX: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: \"100px\"\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,    \n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nfunction StickyHeadTable() {  \n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);      \n  const [timeNow, setTimeNow] = React.useState(\"\")\n  const [dateNow, setDateNow] = React.useState(\"\")    \n  const [value, setValue] = React.useState(0);\n  const [oldValue, setOldValue] = React.useState(0);\n\n  //registrant\n  const [facultyAkl, setFacultyAkl] = React.useState([]);\n  const [facultyAtph, setFacultyAtph] = React.useState([]);\n  const [facultyKkkr, setFacultyKkkr] = React.useState([]);\n  const [facultyTb, setFacultyTb] = React.useState([]);\n  const [facultyTkro, setFacultyTkro] = React.useState([]);  \n\n  const handleChange = (event, newValue) => {    \n    setValue(newValue);\n    setOldValue(newValue);\n  };\n  \n  const handleChangeAll = (event) => {    \n    if (event.target.value !== \"\") {\n      setValue(8);\n    } else {\n      setValue(oldValue);\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };  \n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n//   const handleChangeSearchRegistrant = (event) => {\n//     axiosReportsUsers()\n//         .get(`ppdb/search-fullname/?q=${event.target.value}`)\n//         .then(\n//           res => setData(res.data.data)\n//         ).catch(error => {\n//           Swal.fire({\n//             icon: 'error',\n//             title: 'Gagal mengambil data, silahkan coba kembali'\n//           })\n//         })        \n//   };  \n\n  const myTimer = (event) => {\n    let hoursNow = new Date().getHours()\n    let hoursNowZ = (hoursNow <= 9 ? `0`+hoursNow : hoursNow)\n    let minutesNow = new Date().getMinutes()\n    let minutesNowZ = (minutesNow <= 9 ? `0`+minutesNow : minutesNow)\n    let secondsNow = new Date().getSeconds()    \n    let secondsNowZ = (secondsNow <= 9 ? `0`+secondsNow : secondsNow)\n    let fullTimeNow = `${hoursNowZ}:${minutesNowZ}:${secondsNowZ}` \n    setTimeNow(fullTimeNow) \n\n    let createdAtFullyear = new Date().getFullYear()\n    let createdAtMonth = new Date().getMonth()+1\n    let createdAtMonthZ = (createdAtMonth <= 9 ? `0`+createdAtMonth : createdAtMonth)\n    let createdAtDay = new Date().getDate()\n    let createdAtDayZ = (createdAtDay <= 9 ? `0`+createdAtDay : createdAtDay)\n    let fullDateCreated = `${createdAtDayZ}/${createdAtMonthZ}/${createdAtFullyear}` \n    setDateNow(fullDateCreated)\n  }    \n\n  useEffect(() => {        \n\n    let myVar = setInterval(myTimer, 1000);  \n\n      axiosReportsUsers()\n        .get(`verify/verified/getall`)\n        .then(res => {\n            \n            setFacultyAtph(res.data.facultyAtph)\n            setFacultyTb(res.data.facultyTb)\n            setFacultyTkro(res.data.facultyTkro)\n            setFacultyKkkr(res.data.facultyKkkr)\n            setFacultyAkl(res.data.facultyAkl)            \n\n        }).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Gagal mengambil data, silahkan coba kembali'\n          })\n        })                \n        \n      return () => {\n        clearInterval(myVar)\n      }\n  }, [])\n          \n  return (\n    <div>          \n     <div style={{marginBottom:\"100px\"}}>          \n        <TextField\n          style={{position:\"absolute\", right:\"5px\", top:\"80px\", width:\"108px\"}}\n          variant=\"outlined\"\n          margin=\"normal\"            \n          id=\"fullName\"\n          size=\"small\"\n          value={dateNow}\n          disabled\n        />\n        <TextField\n          style={{position:\"absolute\", right:\"120px\", top:\"80px\", width:\"108px\"}}\n          variant=\"outlined\"\n          margin=\"normal\"            \n          id=\"fullName\"\n          size=\"small\"\n          value={timeNow}\n          disabled\n        />\n    </div>\n\n    <div className={classes.rootZX}>\n      <AppBar position=\"relative\" color=\"default\">\n        <Grid container spacing={0}>      \n          <Toolbar>\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  placeholder=\"Search…\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  margin=\"normal\"\n                  id=\"searchAll\"                  \n                  name=\"searchAll\"\n                  autoComplete=\"searchAll\"\n                  onChange={handleChangeAll}\n                  inputProps={{ 'aria-label': 'search' }}\n                />\n              </div>\n            </Toolbar>\n            <Tabs\n              value={value}\n              onChange={handleChange}          \n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"          \n            >\n              <Tab label=\"Akuntansi (AKL)\" icon={<EuroSymbolIcon />} {...a11yProps(0)} />\n              <Tab label=\"Tata Busana (TB)\" icon={<AccessibilityNewIcon />} {...a11yProps(1)} />\n              <Tab label=\"Otomotif (TKRO)\" icon={<MotorcycleIcon />} {...a11yProps(2)} />\n              <Tab label=\"Pertanian (ATPH)\" icon={<EcoIcon />} {...a11yProps(3)} />\n              <Tab label=\"Kria Kayu (KKKR)\" icon={<SpaIcon />} {...a11yProps(4)} />\n            </Tabs>\n          </Grid>             \n      </AppBar>      \n      <TabPanel value={value} index={0}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"            \n            id=\"fullName\"\n            label=\"Cari dengan nama..\"\n            name=\"fullName\"\n            autoComplete=\"fullName\"\n        //   onChange={handleChangeSearchRegistrant}            \n        />\n\n        <Paper className={classes.root}>           \n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {facultyAkl.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idRegister}>\n                        {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.id == \"action\" ? \n                                <div>\n                                    <Button variant=\"contained\" size=\"small\" color=\"secondary\"  component={Link} to={`regist-card/${row._id}`}>\n                                        Detail\n                                    </Button>                        \n                                </div>\n                                :\n                                column.format && typeof value === 'number' ? column.format(value) : value}                        \n                            </TableCell>\n                            );\n                        })}\n                        </TableRow>\n                    );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={facultyAkl.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />      \n        </Paper>\n        \n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <TextField\n            variant=\"outlined\"\n            margin=\"normal\"            \n            id=\"fullName\"\n            label=\"Cari dengan nama..\"\n            name=\"fullName\"\n            autoComplete=\"fullName\"\n        //   onChange={handleChangeSearchRegistrant}            \n        />\n\n        <Paper className={classes.root}>           \n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {facultyTb.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idRegister}>\n                        {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.id == \"action\" ? \n                                <div>\n                                    <Button variant=\"contained\" size=\"small\" color=\"secondary\"  component={Link} to={`regist-card/${row._id}`}>\n                                        Detail\n                                    </Button>                        \n                                </div>\n                                :\n                                column.format && typeof value === 'number' ? column.format(value) : value}                        \n                            </TableCell>\n                            );\n                        })}\n                        </TableRow>\n                    );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={facultyTb.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />      \n        </Paper>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <TextField\n            variant=\"outlined\"\n            margin=\"normal\"            \n            id=\"fullName\"\n            label=\"Cari dengan nama..\"\n            name=\"fullName\"\n            autoComplete=\"fullName\"\n        //   onChange={handleChangeSearchRegistrant}            \n        />\n\n        <Paper className={classes.root}>           \n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {facultyTkro.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idRegister}>\n                        {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.id == \"action\" ? \n                                <div>\n                                    <Button variant=\"contained\" size=\"small\" color=\"secondary\"  component={Link} to={`regist-card/${row._id}`}>\n                                        Detail\n                                    </Button>                        \n                                </div>\n                                :\n                                column.format && typeof value === 'number' ? column.format(value) : value}                        \n                            </TableCell>\n                            );\n                        })}\n                        </TableRow>\n                    );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={facultyTkro.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />      \n        </Paper>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n      <TextField\n            variant=\"outlined\"\n            margin=\"normal\"            \n            id=\"fullName\"\n            label=\"Cari dengan nama..\"\n            name=\"fullName\"\n            autoComplete=\"fullName\"\n        //   onChange={handleChangeSearchRegistrant}            \n        />\n\n        <Paper className={classes.root}>           \n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {facultyAtph.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idRegister}>\n                        {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.id == \"action\" ? \n                                <div>\n                                    <Button variant=\"contained\" size=\"small\" color=\"secondary\"  component={Link} to={`regist-card/${row._id}`}>\n                                        Detail\n                                    </Button>                        \n                                </div>\n                                :\n                                column.format && typeof value === 'number' ? column.format(value) : value}                        \n                            </TableCell>\n                            );\n                        })}\n                        </TableRow>\n                    );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={facultyAtph.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />      \n        </Paper>\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n      <TextField\n            variant=\"outlined\"\n            margin=\"normal\"            \n            id=\"fullName\"\n            label=\"Cari dengan nama..\"\n            name=\"fullName\"\n            autoComplete=\"fullName\"\n        //   onChange={handleChangeSearchRegistrant}            \n        />\n\n        <Paper className={classes.root}>           \n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {facultyKkkr.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.idRegister}>\n                        {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                            <TableCell key={column.id} align={column.align}>\n                                {column.id == \"action\" ? \n                                <div>\n                                    <Button variant=\"contained\" size=\"small\" color=\"secondary\"  component={Link} to={`regist-card/${row._id}`}>\n                                        Detail\n                                    </Button>                        \n                                </div>\n                                :\n                                column.format && typeof value === 'number' ? column.format(value) : value}                        \n                            </TableCell>\n                            );\n                        })}\n                        </TableRow>\n                    );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={facultyKkkr.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />      \n        </Paper>\n      </TabPanel>      \n    </div>    \n    </div> \n  );\n}\n\nexport default withRouter(StickyHeadTable)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/SuperAdmin/Main.js",["161","162","163","164","165","166"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SpeakerNotesIcon from '@material-ui/icons/SpeakerNotes';\nimport AccountProfileIcon from '@material-ui/icons/AccountCircle';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { verify } from \"../../../modules/helpers\"\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 250,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  fullList: {\n    width: 'auto',\n  },\n  bold: {\n    fontWeight: 'bold'\n  }\n}));\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [data, setData] = React.useState(\"\")\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem>\n          <ListItemText>Welcome, {verify().fullName}</ListItemText>\n        </ListItem>\n\n        {['Pendaftar PPDB 2020'].map((text, index) => (\n          <ListItem \n          button \n          key={text}\n          component={Link}\n          to=\"/regist-table\"\n          >\n            <ListItemIcon><ViewListIcon /></ListItemIcon>\n            <ListItemText primary={text} ></ListItemText>\n          </ListItem>\n        ))}\n\n        {['Tambah Admin Baru'].map((text, index) => (\n          <ListItem \n          button \n          key={text}\n          component={Link}\n          to=\"/add-admin\"\n          >\n            <ListItemIcon><PersonAddIcon /></ListItemIcon>\n            <ListItemText primary={text} ></ListItemText>\n          </ListItem>\n        ))}\n          \n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton \n      onClick={toggleDrawer('left', true)}\n      id=\"Menu-User\" edge=\"start\" \n      className={classes.menuButton} \n      color=\"inherit\" \n      aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>      \n      <SwipeableDrawer\n        open={state.left}\n        onClose={toggleDrawer('left', false)}\n        onOpen={toggleDrawer('left', true)}\n      >\n        {sideList('left')}\n      </SwipeableDrawer>\n    </div>\n  );\n}","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Header/Admin/Main.js",["167"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport { verify } from \"../../../modules/helpers\"\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 250,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  fullList: {\n    width: 'auto',\n  },\n  bold: {\n    fontWeight: 'bold'\n  }\n}));\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem>\n          <ListItemText>Welcome, {verify().fullName}</ListItemText>\n        </ListItem>\n\n        {['Pendaftar PPDB 2020'].map((text, index) => (\n          <ListItem \n          button \n          key={text}\n          component={Link}\n          to=\"/regist-table\"\n          >\n            <ListItemIcon><ViewListIcon /></ListItemIcon>\n            <ListItemText primary={text} ></ListItemText>\n          </ListItem>\n        ))}\n\n        <Divider />\n\n        {['Verifikasi Sukses'].map((text, index) => (\n          <ListItem \n          button \n          key={text}\n          component={Link}\n          to=\"/regist-success\"\n          >\n            <ListItemIcon><DoneAllIcon /></ListItemIcon>\n            <ListItemText primary={text} ></ListItemText>\n          </ListItem>\n        ))}\n\n        {['Verifikasi Gagal'].map((text, index) => (\n          <ListItem \n          button \n          key={text}\n          component={Link}\n          to=\"/regist-table\"\n          >\n            <ListItemIcon><CancelIcon /></ListItemIcon>\n            <ListItemText primary={text} ></ListItemText>\n          </ListItem>\n        ))}\n        \n          \n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton \n      onClick={toggleDrawer('left', true)}\n      id=\"Menu-User\" edge=\"start\" \n      className={classes.menuButton} \n      color=\"inherit\" \n      aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>      \n      <SwipeableDrawer\n        open={state.left}\n        onClose={toggleDrawer('left', false)}\n        onOpen={toggleDrawer('left', true)}\n      >\n        {sideList('left')}\n      </SwipeableDrawer>\n    </div>\n  );\n}","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.react.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/components/Loading/Loader.jsx",["168"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport LoaderGif from '../../assets/img/loading.gif'\n\nclass Loader extends Component {\n    state = { }\n\n    render() {\n        const { loading } = this.props;\n\n        if (!loading) return null\n\n        return (\n            <div class=\"loader-container\">\n                <div className=\"loader\">\n                    <img src={LoaderGif} />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({ loading: state.loading})\n\nexport default connect(mapStateToProps)(Loader)","/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/index.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/modules/validation/registerAdmin.js",[],"/home/adinugroho/Tugas/JavascriptJava/Project/ppdb-smkn1nawangan/src/assets/chartjs/canvasjs.min.js",[],{"ruleId":"169","severity":1,"message":"170","line":10,"column":10,"nodeType":"171","messageId":"172","endLine":10,"endColumn":23},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":53,"column":66,"nodeType":"179","messageId":"180","endLine":53,"endColumn":68},{"ruleId":"181","severity":1,"message":"182","line":8,"column":1,"nodeType":"183","endLine":36,"endColumn":3},{"ruleId":"169","severity":1,"message":"184","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":322,"column":25,"nodeType":"187","endLine":322,"endColumn":33},{"ruleId":"177","severity":1,"message":"188","line":69,"column":33,"nodeType":"179","messageId":"180","endLine":69,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":149,"column":11,"nodeType":"191","endLine":149,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":166,"column":11,"nodeType":"191","endLine":166,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":183,"column":11,"nodeType":"191","endLine":183,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":201,"column":9,"nodeType":"191","endLine":201,"endColumn":55},{"ruleId":"177","severity":1,"message":"178","line":190,"column":36,"nodeType":"179","messageId":"180","endLine":190,"endColumn":38},{"ruleId":"169","severity":1,"message":"192","line":15,"column":34,"nodeType":"171","messageId":"172","endLine":15,"endColumn":41},{"ruleId":"169","severity":1,"message":"193","line":39,"column":5,"nodeType":"171","messageId":"172","endLine":39,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":68,"column":8,"nodeType":"196","endLine":68,"endColumn":10,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":130,"column":6,"nodeType":"196","endLine":130,"endColumn":8,"suggestions":"199"},{"ruleId":"189","severity":1,"message":"190","line":145,"column":9,"nodeType":"191","endLine":145,"endColumn":22},{"ruleId":"169","severity":1,"message":"200","line":32,"column":12,"nodeType":"171","messageId":"172","endLine":32,"endColumn":23},{"ruleId":"194","severity":1,"message":"201","line":159,"column":8,"nodeType":"196","endLine":159,"endColumn":10,"suggestions":"202"},{"ruleId":"177","severity":1,"message":"178","line":357,"column":44,"nodeType":"179","messageId":"180","endLine":357,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":421,"column":44,"nodeType":"179","messageId":"180","endLine":421,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":484,"column":44,"nodeType":"179","messageId":"180","endLine":484,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":547,"column":44,"nodeType":"179","messageId":"180","endLine":547,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":610,"column":44,"nodeType":"179","messageId":"180","endLine":610,"endColumn":46},{"ruleId":"169","severity":1,"message":"203","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"204","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":14},{"ruleId":"169","severity":1,"message":"205","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":24},{"ruleId":"169","severity":1,"message":"206","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":26},{"ruleId":"169","severity":1,"message":"207","line":36,"column":10,"nodeType":"171","messageId":"172","endLine":36,"endColumn":14},{"ruleId":"169","severity":1,"message":"208","line":36,"column":16,"nodeType":"171","messageId":"172","endLine":36,"endColumn":23},{"ruleId":"169","severity":1,"message":"203","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":16,"column":21,"nodeType":"191","endLine":16,"endColumn":44},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["211"],"no-negated-in-lhs",["212"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getUser' is defined but never used.","'CanvasJS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["213"],"React Hook useEffect has missing dependencies: 'id' and 'urlLoginLive'. Either include them or remove the dependency array.",["214"],"'btnDisabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'navigateTo', and 'onChangeVerif'. Either include them or remove the dependency array.",["215"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'SpeakerNotesIcon' is defined but never used.","'AccountProfileIcon' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [props]",{"range":"222","text":"223"},"Update the dependencies array to be: [id, urlLoginLive]",{"range":"224","text":"225"},"Update the dependencies array to be: [id, navigateTo, onChangeVerif]",{"range":"226","text":"227"},[1952,1954],"[props]",[4062,4064],"[id, urlLoginLive]",[5809,5811],"[id, navigateTo, onChangeVerif]"]